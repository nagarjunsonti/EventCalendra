{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  usersList: [],\n  eventsList: []\n};\n\nconst reducer = (state = initialState, action) => {\n  let newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"get_user_event_data\":\n      newState = _objectSpread({}, state, {\n        usersList: action.data[0].UserRows,\n        eventsList: action.data[1].EventRows\n      });\n      return newState;\n\n    case \"delete_user_data\":\n      let filterData = state.usersList.filter(value => {\n        return !seletedRowIds.includes(value.user_index);\n      });\n      newState = _objectSpread({}, state, {\n        usersList: filterData\n      });\n      return newState;\n\n    default:\n      return newState;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/projects/spectrum/src/store/reducer.js"],"names":["initialState","usersList","eventsList","reducer","state","action","newState","type","data","UserRows","EventRows","filterData","filter","value","seletedRowIds","includes","user_index"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,MAAIC,QAAQ,qBAAQF,KAAR,CAAZ;;AACA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAK,qBAAL;AACID,MAAAA,QAAQ,qBACDF,KADC;AAEJH,QAAAA,SAAS,EAAEI,MAAM,CAACG,IAAP,CAAY,CAAZ,EAAeC,QAFtB;AAGJP,QAAAA,UAAU,EAAEG,MAAM,CAACG,IAAP,CAAY,CAAZ,EAAeE;AAHvB,QAAR;AAKA,aAAOJ,QAAP;;AACJ,SAAK,kBAAL;AACI,UAAIK,UAAU,GAAGP,KAAK,CAACH,SAAN,CAAgBW,MAAhB,CAAwBC,KAAD,IAAW;AAC/C,eAAQ,CAACC,aAAa,CAACC,QAAd,CAAuBF,KAAK,CAACG,UAA7B,CAAT;AACH,OAFgB,CAAjB;AAGAV,MAAAA,QAAQ,qBACDF,KADC;AAEJH,QAAAA,SAAS,EAAEU;AAFP,QAAR;AAIA,aAAOL,QAAP;;AACJ;AACI,aAAOA,QAAP;AAlBR;AAoBH,CAtBD;;AAuBA,eAAeH,OAAf","sourcesContent":["const initialState = {\r\n    usersList: [],\r\n    eventsList: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let newState = { ...state };\r\n    switch (action.type) {\r\n        case \"get_user_event_data\":\r\n            newState = {\r\n                ...state,\r\n                usersList: action.data[0].UserRows,\r\n                eventsList: action.data[1].EventRows\r\n            };\r\n            return newState;\r\n        case \"delete_user_data\":\r\n            let filterData = state.usersList.filter((value) => {\r\n                return (!seletedRowIds.includes(value.user_index))\r\n            });\r\n            newState = {\r\n                ...state,\r\n                usersList: filterData\r\n            };\r\n            return newState;\r\n        default:\r\n            return newState;\r\n    }\r\n}\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}