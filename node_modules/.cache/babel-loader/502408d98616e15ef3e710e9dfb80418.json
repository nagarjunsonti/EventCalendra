{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  usersList: [],\n  eventsList: []\n};\n\nconst reducer = (state = initialState, action) => {\n  let newState = _objectSpread({}, state);\n\n  let filterData = \"\";\n  let searcheddata = \"\";\n  let flag = false;\n  let regex = \"\";\n  let userFilterData = \"\";\n  let user_ids_event = [];\n\n  switch (action.type) {\n    case \"get_user_event_data\":\n      newState = _objectSpread({}, state, {\n        usersList: action.data[0].UserRows,\n        eventsList: action.data[1].EventRows\n      });\n      return newState;\n\n    case \"delete_user_data\":\n      userFilterData = state.usersList.filter(value => {\n        return !action.data.includes(value.index);\n      });\n      filterData = state.eventsList;\n      filterData.forEach(element => {\n        action.data.forEach(value => {\n          let valueindex = element.registerd_user.indexOf(value);\n\n          if (valueindex !== -1) {\n            element.registerd_user.splice(valueindex, 1);\n          }\n        });\n      });\n      newState = _objectSpread({}, state, {\n        usersList: userFilterData,\n        eventsList: filterData\n      });\n      return newState;\n\n    case \"delete_event_data\":\n      user_ids_event = [];\n      filterData = state.eventsList.filter(value => {\n        if (action.data.includes(value.index)) {\n          user_ids_event = [...new Set([...user_ids_event, ...value.registerd_user])];\n          return false;\n        }\n\n        return true;\n      });\n      userFilterData = state.usersList.filter(value => {\n        return !user_ids_event.includes(value.index);\n      });\n      newState = _objectSpread({}, state, {\n        usersList: userFilterData,\n        eventsList: filterData\n      });\n      return newState;\n\n    case \"set_isShowOnCalander\":\n      filterData = state.eventsList.map(value => {\n        if (value.index === action.data) {\n          value.isShowOnCalander = !value.isShowOnCalander;\n        }\n\n        return value;\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData\n      });\n      return newState;\n\n    case \"add_event_data\":\n      let selectedEvents = action.data.eventsId;\n      let selectedUser = action.data.addUserData;\n      userFilterData = state.usersList;\n      let selectedEventsLength = selectedEvents.lenth;\n      filterData = state.eventsList.map(value => {\n        if (selectedEvents.includes(value.index)) {\n          value.registerd_user.push(selectedUser.index);\n        }\n\n        return value;\n      });\n      userFilterData = state.usersList.map(value => {\n        if (value.index === selectedUser.index) {\n          value.registeredevents = value.registeredevents + selectedEventsLength;\n        }\n\n        return value;\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData,\n        usersList: userFilterData\n      });\n      return newState;\n\n    case \"search_user_tables_data\":\n      searcheddata = action.data;\n      let user_ids_user = [];\n      regex = new RegExp(searcheddata, 'gi');\n      flag = false;\n      userFilterData = state.usersList.filter(value => {\n        flag = value.name.match(regex);\n\n        if (flag) {\n          user_ids_user.push(value.index);\n          return true;\n        } else {\n          return false;\n        }\n      });\n      filterData = state.eventsList.filter(value => {\n        const ids_length = value.registerd_user.length;\n        flag = false;\n\n        for (let i = 0; i < ids_length; i++) {\n          flag = user_ids_user.includes(value.registerd_user[i]);\n          if (flag) break;\n        }\n\n        return flag;\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData,\n        usersList: userFilterData\n      });\n      return newState;\n\n    case \"search_event_tables_data\":\n      searcheddata = action.data;\n      let user_ids_event = [];\n      flag = false;\n      regex = new RegExp(searcheddata, 'gi');\n      filterData = state.eventsList.filter(value => {\n        flag = value.organizer.match(regex);\n\n        if (flag) {\n          //events_ids.push(value.index);\n          user_ids_event = [...new Set([...user_ids_event, ...value.registerd_user])];\n          return true;\n        } else {\n          return false;\n        }\n      });\n      userFilterData = state.usersList.filter(element => {\n        return user_ids_event.includes(element.index);\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData,\n        usersList: userFilterData\n      });\n      return newState;\n\n    default:\n      return newState;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/projects/spectrum/src/store/reducer.js"],"names":["initialState","usersList","eventsList","reducer","state","action","newState","filterData","searcheddata","flag","regex","userFilterData","user_ids_event","type","data","UserRows","EventRows","filter","value","includes","index","forEach","element","valueindex","registerd_user","indexOf","splice","Set","map","isShowOnCalander","selectedEvents","eventsId","selectedUser","addUserData","selectedEventsLength","lenth","push","registeredevents","user_ids_user","RegExp","name","match","ids_length","length","i","organizer"],"mappings":"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","sourcesContent":["const initialState = {\r\n  usersList: [],\r\n  eventsList: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let newState = { ...state };\r\n  let filterData = \"\";\r\n  let searcheddata=\"\";\r\n  let flag=false;\r\n  let regex=\"\";\r\n  let userFilterData=\"\";\r\n  let user_ids_event=[];\r\n  switch (action.type) {\r\n    case \"get_user_event_data\":\r\n    newState = {\r\n      ...state,\r\n      usersList: action.data[0].UserRows,\r\n      eventsList: action.data[1].EventRows\r\n    };\r\n    return newState;\r\n    case \"delete_user_data\":\r\n\r\n    userFilterData= state.usersList.filter((value) => {\r\n      return (!action.data.includes(value.index))\r\n    });\r\n\r\n    filterData=state.eventsList;\r\n    filterData.forEach((element)=>{              \r\n     action.data.forEach((value)=>{\r\n       let valueindex=element.registerd_user.indexOf(value);\r\n       if(valueindex !== -1){\r\n        element.registerd_user.splice(valueindex, 1);\r\n      }\r\n    });               \r\n   })\r\n    newState = {\r\n      ...state,\r\n      usersList: userFilterData,\r\n      eventsList:filterData\r\n    };\r\n    return newState;\r\n    case \"delete_event_data\":    \r\n    user_ids_event=[];\r\n    filterData = state.eventsList.filter((value) => {\r\n     if(action.data.includes(value.index)){\r\n       user_ids_event= [...new Set([...user_ids_event, ...value.registerd_user])];\r\n       return false;                         \r\n     }\r\n     return true;\r\n   });\r\n    userFilterData= state.usersList.filter((value) => {\r\n      return (!user_ids_event.includes(value.index));\r\n\r\n    });\r\n    newState = {\r\n      ...state,\r\n      usersList: userFilterData,\r\n      eventsList:filterData\r\n    };\r\n    return newState;\r\n    case \"set_isShowOnCalander\":\r\n    filterData = state.eventsList.map((value) => {\r\n      if(value.index === action.data){\r\n        value.isShowOnCalander= !value.isShowOnCalander;\r\n      }\r\n      return value;\r\n    });\r\n    newState = {\r\n      ...state,\r\n      eventsList: filterData\r\n    };\r\n    return newState;\r\n    case \"add_event_data\":\r\n    let selectedEvents=action.data.eventsId;\r\n    let selectedUser=action.data.addUserData;\r\n    userFilterData=state.usersList;\r\n    let selectedEventsLength=selectedEvents.lenth;\r\n    filterData = state.eventsList.map((value) => {\r\n      if(selectedEvents.includes(value.index)){\r\n        value.registerd_user.push(selectedUser.index);                    \r\n      }\r\n      return value;\r\n    });\r\n    userFilterData = state.usersList.map((value) => {\r\n      if(value.index === selectedUser.index){\r\n        value.registeredevents=value.registeredevents+selectedEventsLength;                    \r\n      }\r\n      return value;\r\n    });\r\n    newState = {\r\n      ...state,\r\n      eventsList: filterData,\r\n      usersList: userFilterData\r\n    };\r\n    return newState;\r\n    case \"search_user_tables_data\":\r\n    searcheddata=action.data;\r\n    let user_ids_user=[];\r\n    regex = new RegExp(searcheddata, 'gi')\r\n    flag=false;\r\n\r\n    userFilterData = state.usersList.filter((value) => {\r\n      flag=value.name.match(regex)\r\n      if(flag){\r\n        user_ids_user.push(value.index);\r\n        return true;\r\n      }else{\r\n       return false;\r\n     }                        \r\n   });\r\n\r\n    filterData = state.eventsList.filter((value) => {\r\n      const ids_length=value.registerd_user.length;\r\n      flag=false;\r\n      for(let i=0; i<ids_length; i++){\r\n        flag=user_ids_user.includes(value.registerd_user[i]);\r\n        if(flag)break;\r\n      }\r\n      return flag;\r\n\r\n    });\r\n\r\n    newState = {\r\n      ...state,\r\n      eventsList: filterData,\r\n      usersList: userFilterData\r\n    };\r\n    return newState;\r\n    case \"search_event_tables_data\":\r\n    searcheddata=action.data;\r\n    let user_ids_event=[];\r\n    flag=false;\r\n    regex = new RegExp(searcheddata, 'gi')\r\n\r\n\r\n    filterData= state.eventsList.filter((value) => {\r\n      flag=value.organizer.match(regex)\r\n      if(flag){\r\n                        //events_ids.push(value.index);\r\n                        user_ids_event=[...new Set([...user_ids_event, ...value.registerd_user])];\r\n                        return true;                        \r\n                      }else{\r\n                       return false;\r\n                     }\r\n\r\n                   });\r\n\r\n    userFilterData = state.usersList.filter((element) => {\r\n      return user_ids_event.includes(element.index);                                    \r\n    });\r\n\r\n    newState = {\r\n      ...state,\r\n      eventsList: filterData,\r\n      usersList: userFilterData\r\n    };\r\n    return newState;\r\n\r\n    default:                \r\n    return newState;\r\n  }\r\n}\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}