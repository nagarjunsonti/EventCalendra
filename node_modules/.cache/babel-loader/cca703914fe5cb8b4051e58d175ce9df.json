{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  usersList: [],\n  eventsList: []\n};\n\nconst reducer = (state = initialState, action) => {\n  let newState = _objectSpread({}, state);\n\n  let filterData = \"\";\n  let searcheddata = \"\";\n  let flag = false;\n  let regex = \"\";\n  let userFilterData = \"\";\n\n  switch (action.type) {\n    case \"get_user_event_data\":\n      newState = _objectSpread({}, state, {\n        usersList: action.data[0].UserRows,\n        eventsList: action.data[1].EventRows\n      });\n      return newState;\n\n    case \"delete_user_data\":\n      filterData = state.usersList.filter(value => {\n        return !action.data.includes(value.index);\n      });\n      newState = _objectSpread({}, state, {\n        usersList: filterData\n      });\n      return newState;\n\n    case \"delete_event_data\":\n      filterData = state.eventsList.filter(value => {\n        return !action.data.includes(value.index);\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData\n      });\n      return newState;\n\n    case \"set_isShowOnCalander\":\n      filterData = state.eventsList.map(value => {\n        if (value.index === action.data) {\n          value.isShowOnCalander = !value.isShowOnCalander;\n        }\n\n        return value;\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData\n      });\n      return newState;\n\n    case \"add_event_data\":\n      let selectedEvents = action.data.eventsId;\n      let selectedUser = action.data.addUserData;\n      userFilterData = state.usersList;\n      let selectedEventsLength = selectedEvents.lenth;\n      filterData = state.eventsList.map(value => {\n        if (selectedEvents.includes(value.index)) {\n          value.registerd_user.push(selectedUser.index);\n        }\n\n        return value;\n      });\n      userFilterData = state.usersList.map(value => {\n        if (value.index === selectedUser.index) {\n          value.registeredevents = value.registeredevents + selectedEventsLength;\n        }\n\n        return value;\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData,\n        usersList: userFilterData\n      });\n      return newState;\n\n    case \"search_user_tables_data\":\n      searcheddata = action.data.searcheddata;\n      let user_ids_user = [];\n      regex = new RegExp(searcheddata, 'gi');\n      flag = false;\n      userFilterData = state.usersList.filter(value => {\n        flag = value.name.match(regex);\n\n        if (flag) {\n          user_ids_user.push(value.index);\n        }\n\n        return flag;\n      });\n      filterData = state.eventsList.filter(value => {\n        const ids_length = value.registerd_user.length;\n        flag = false;\n\n        for (let i = 0; i < ids_length; i++) {\n          flag = user_ids_user.includes(value.registerd_user[i]);\n          if (flag) break;\n        }\n\n        return flag;\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData,\n        usersList: userFilterData\n      });\n      return newState;\n\n    case \"search_event_tables_data\":\n      searcheddata = action.data.searcheddata;\n      let user_ids_event = [];\n      flag = false;\n      regex = new RegExp(searcheddata, 'gi');\n      filterData = state.eventsList.filter(value => {\n        flag = value.organizer.match(regex);\n\n        if (flag) {\n          //events_ids.push(value.index);\n          user_ids_event = [...new Set([...user_ids_event, ...value.registerd_user])];\n        }\n\n        return flag;\n      });\n      userFilterData = state.usersList.filter(element => {\n        return user_ids_event.includes(element.index);\n      });\n      newState = _objectSpread({}, state, {\n        eventsList: filterData,\n        usersList: userFilterData\n      });\n      return newState;\n\n    default:\n      return newState;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/projects/spectrum/src/store/reducer.js"],"names":["initialState","usersList","eventsList","reducer","state","action","newState","filterData","searcheddata","flag","regex","userFilterData","type","data","UserRows","EventRows","filter","value","includes","index","map","isShowOnCalander","selectedEvents","eventsId","selectedUser","addUserData","selectedEventsLength","lenth","registerd_user","push","registeredevents","user_ids_user","RegExp","name","match","ids_length","length","i","user_ids_event","organizer","Set","element"],"mappings":"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","sourcesContent":["const initialState = {\r\n    usersList: [],\r\n    eventsList: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let newState = { ...state };\r\n    let filterData = \"\";\r\n    let searcheddata=\"\";\r\n    let flag=false;\r\n    let regex=\"\";\r\n    let userFilterData=\"\";\r\n    switch (action.type) {\r\n        case \"get_user_event_data\":\r\n            newState = {\r\n                ...state,\r\n                usersList: action.data[0].UserRows,\r\n                eventsList: action.data[1].EventRows\r\n            };\r\n            return newState;\r\n        case \"delete_user_data\":\r\n            filterData = state.usersList.filter((value) => {\r\n                return (!action.data.includes(value.index))\r\n            });\r\n            newState = {\r\n                ...state,\r\n                usersList: filterData\r\n            };\r\n            return newState;\r\n        case \"delete_event_data\":\r\n            filterData = state.eventsList.filter((value) => {\r\n                return (!action.data.includes(value.index))\r\n            });\r\n            newState = {\r\n                ...state,\r\n                eventsList: filterData\r\n            };\r\n            return newState;\r\n        case \"set_isShowOnCalander\":\r\n            filterData = state.eventsList.map((value) => {\r\n                if(value.index === action.data){\r\n                    value.isShowOnCalander= !value.isShowOnCalander;\r\n                }\r\n                return value;\r\n            });\r\n            newState = {\r\n                ...state,\r\n                eventsList: filterData\r\n            };\r\n            return newState;\r\n        case \"add_event_data\":\r\n                let selectedEvents=action.data.eventsId;\r\n                let selectedUser=action.data.addUserData;\r\n                userFilterData=state.usersList;\r\n                let selectedEventsLength=selectedEvents.lenth;\r\n            filterData = state.eventsList.map((value) => {\r\n                if(selectedEvents.includes(value.index)){\r\n                    value.registerd_user.push(selectedUser.index);                    \r\n                }\r\n                return value;\r\n            });\r\n           userFilterData = state.usersList.map((value) => {\r\n                if(value.index === selectedUser.index){\r\n                    value.registeredevents=value.registeredevents+selectedEventsLength;                    \r\n                }\r\n                return value;\r\n            });\r\n            newState = {\r\n                ...state,\r\n                eventsList: filterData,\r\n                usersList: userFilterData\r\n            };\r\n            return newState;\r\n        case \"search_user_tables_data\":\r\n                searcheddata=action.data.searcheddata;\r\n                let user_ids_user=[];\r\n                regex = new RegExp(searcheddata, 'gi')\r\n                flag=false;\r\n\r\n               userFilterData = state.usersList.filter((value) => {\r\n                    flag=value.name.match(regex)\r\n                    if(flag){\r\n                        user_ids_user.push(value.index)\r\n                    }\r\n                        return flag; \r\n                });\r\n\r\n               filterData = state.eventsList.filter((value) => {\r\n                    const ids_length=value.registerd_user.length;\r\n                    flag=false;\r\n                    for(let i=0; i<ids_length; i++){\r\n                        flag=user_ids_user.includes(value.registerd_user[i]);\r\n                            if(flag)break;\r\n                    }\r\n                    return flag;\r\n                                    \r\n                });\r\n\r\n            newState = {\r\n                ...state,\r\n                eventsList: filterData,\r\n                usersList: userFilterData\r\n            };\r\n            return newState;\r\n            case \"search_event_tables_data\":\r\n                searcheddata=action.data.searcheddata;\r\n                let user_ids_event=[];\r\n                flag=false;\r\n                regex = new RegExp(searcheddata, 'gi')\r\n\r\n\r\n                filterData= state.eventsList.filter((value) => {\r\n                    flag=value.organizer.match(regex)\r\n                    if(flag){\r\n                        //events_ids.push(value.index);\r\n                        user_ids_event=[...new Set([...user_ids_event, ...value.registerd_user])];                        \r\n                    } \r\n                    return flag                        \r\n                });\r\n\r\n               userFilterData = state.usersList.filter((element) => {\r\n                    return user_ids_event.includes(element.index);                                    \r\n                });\r\n\r\n            newState = {\r\n                ...state,\r\n                eventsList: filterData,\r\n                usersList: userFilterData\r\n            };\r\n            return newState;\r\n        \r\n        default:                \r\n            return newState;\r\n    }\r\n}\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}