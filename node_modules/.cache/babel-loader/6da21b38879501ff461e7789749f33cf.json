{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\component\\\\userTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TableWidget from '../widgets/TableWidget';\nimport { connect } from 'react-redux';\nimport SideBarcomponent from './SideBarcomponent';\nimport PropTypes from 'prop-types';\n\nfunction Usertable(props) {\n  const title = props.title,\n        columns = props.columns,\n        usersList = props.usersList;\n\n  const _useState = useState({\n    modelOpen: false,\n    calanderDataList: usersList,\n    showAddTable: false,\n    searchFilterValue: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        modelData = _useState2[0],\n        setModelData = _useState2[1];\n\n  const handleClickModelOpen = data => {\n    console.log(data);\n    let popupData = [data];\n    setModelData({\n      modelOpen: true,\n      calanderDataList: popupData\n    });\n  };\n\n  const handleClickModelClose = data => {\n    console.log(data);\n    setModelData(_objectSpread({}, modelData, {\n      modelOpen: false,\n      showAddTable: false\n    }));\n  };\n\n  const handleClicAddEvents = data => {\n    console.log(data);\n    let popupData = [data];\n    setModelData({\n      modelOpen: true,\n      calanderDataList: popupData,\n      showAddTable: true\n    });\n  }; // handleTableSearch = (searchedData) => {\n  // }\n  // const deleteSelectedRows=(seletedRowIds)=>{\n  //   let filterData=usersList.filter((value)=>{\n  //       return (!seletedRowIds.includes(value.user_index))\n  //   });\n  // }\n\n\n  const actionColumn = [{\n    title: \"View events\",\n    // handleViewAction:{handleClickModelClose}\n    callBack: handleClickModelOpen,\n    icon: \"view\"\n  }, {\n    title: \"Add Events\",\n    //handleAddAction:{handleClickModelClose}\n    callBack: handleClicAddEvents,\n    icon: \"add\"\n  }];\n  const modelOpen = modelData.modelOpen,\n        calanderDataList = modelData.calanderDataList,\n        showAddTable = modelData.showAddTable,\n        searchFilterValue = modelData.searchFilterValue;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TableWidget, {\n    rows: usersList,\n    defaultSort: \"name\",\n    columns: columns,\n    tableTitle: title,\n    handleToolBarAction: props.deleteSelectedRows,\n    actionColumn: actionColumn,\n    handleTableSearch: props.handleTableSearch,\n    searchPlaceholder: \"Search By Name\",\n    searchFilterValue: searchFilterValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(SideBarcomponent, {\n    modelOpen: modelOpen,\n    closeModelClick: handleClickModelClose,\n    calanderDataList: calanderDataList,\n    showAddTable: showAddTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    usersList: state.usersList\n  };\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    deleteSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"delete_user_data\",\n        data: seletedRowIds\n      });\n    },\n    handleTableSearch: searcheddata => {\n      dispatch({\n        type: \"search_user_tables_data\",\n        data: searcheddata\n      });\n    }\n  };\n};\n\nUsertable.propTypes = {\n  title: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  usersList: PropTypes.array.isRequired,\n  deleteSelectedRows: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispachToProps)(Usertable);","map":{"version":3,"sources":["C:/projects/spectrum/src/component/userTable.js"],"names":["React","useState","TableWidget","connect","SideBarcomponent","PropTypes","Usertable","props","title","columns","usersList","modelOpen","calanderDataList","showAddTable","searchFilterValue","modelData","setModelData","handleClickModelOpen","data","console","log","popupData","handleClickModelClose","handleClicAddEvents","actionColumn","callBack","icon","deleteSelectedRows","handleTableSearch","mapStateToProps","state","mapDispachToProps","dispatch","seletedRowIds","type","searcheddata","propTypes","string","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport TableWidget from '../widgets/TableWidget';\r\nimport { connect } from 'react-redux';\r\nimport SideBarcomponent from './SideBarcomponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Usertable(props) {\r\n\r\n  const { title, columns, usersList} = props;\r\n\r\n  const [modelData, setModelData]=useState({\r\n    modelOpen:false,\r\n    calanderDataList:usersList,\r\n    showAddTable:false,\r\n    searchFilterValue:\"\"\r\n  });  \r\n    \r\n    const handleClickModelOpen=(data)=>{\r\n      console.log(data);\r\n      let popupData=[data];\r\n      setModelData({modelOpen:true,calanderDataList:popupData});\r\n    }\r\n    const handleClickModelClose=(data)=>{\r\n      console.log(data);\r\n      setModelData({...modelData, modelOpen:false, showAddTable:false});\r\n    }\r\n    const handleClicAddEvents=(data)=>{\r\n      console.log(data);\r\n      let popupData=[data];\r\n      setModelData({modelOpen:true,calanderDataList:popupData,showAddTable:true});\r\n    }\r\n    // handleTableSearch = (searchedData) => {\r\n      \r\n    // }\r\n    // const deleteSelectedRows=(seletedRowIds)=>{\r\n    //   let filterData=usersList.filter((value)=>{\r\n    //       return (!seletedRowIds.includes(value.user_index))\r\n    //   });\r\n\r\n    // }\r\n  const actionColumn = [\r\n    {\r\n      title: \"View events\",\r\n      // handleViewAction:{handleClickModelClose}\r\n      callBack:handleClickModelOpen,\r\n      icon:\"view\"\r\n    },\r\n    {\r\n      title: \"Add Events\",\r\n      //handleAddAction:{handleClickModelClose}\r\n      callBack:handleClicAddEvents,\r\n      icon:\"add\"\r\n    }    \r\n  ];\r\n  const {modelOpen, calanderDataList, showAddTable, searchFilterValue}=modelData;\r\n  return (\r\n    <React.Fragment>\r\n      <TableWidget\r\n        rows={usersList}\r\n        defaultSort='name'\r\n        columns={columns}\r\n        tableTitle={title}\r\n        handleToolBarAction={props.deleteSelectedRows}\r\n        actionColumn={actionColumn}\r\n        handleTableSearch={props.handleTableSearch} \r\n        searchPlaceholder=\"Search By Name\"\r\n        searchFilterValue={searchFilterValue} \r\n      />\r\n      <SideBarcomponent \r\n                    modelOpen={modelOpen}                    \r\n                    closeModelClick={handleClickModelClose}\r\n                    calanderDataList={calanderDataList}\r\n                    showAddTable={showAddTable}\r\n            />\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersList: state.usersList\r\n  }\r\n}\r\nconst mapDispachToProps=(dispatch)=>{\r\n    return {\r\n      deleteSelectedRows:(seletedRowIds)=>{\r\n        dispatch({type:\"delete_user_data\", data:seletedRowIds})\r\n      },\r\n      handleTableSearch:(searcheddata)=>{\r\n        dispatch({type:\"search_user_tables_data\", data:searcheddata})\r\n      }\r\n    }\r\n}\r\nUsertable.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  columns:PropTypes.array.isRequired,\r\n  usersList:PropTypes.array.isRequired,\r\n  deleteSelectedRows:PropTypes.func.isRequired  \r\n}\r\nexport default connect(mapStateToProps, mapDispachToProps)(Usertable);"]},"metadata":{},"sourceType":"module"}