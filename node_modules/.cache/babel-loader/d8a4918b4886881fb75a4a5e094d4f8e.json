{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  usersList: [],\n  eventsList: []\n};\n\nconst reducer = (state = initialState, action) => {\n  const newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"get_user_event_data\":\n      newState = _objectSpread({}, state, {\n        usersList: action.data[0],\n        eventsList: action.data[1]\n      });\n      return newState;\n      break;\n\n    default:\n      return newState;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/projects/spectrum/src/store/reducer.js"],"names":["initialState","usersList","eventsList","reducer","state","action","newState","type","data"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAC;AACfC,EAAAA,SAAS,EAAC,EADK;AAEfC,EAAAA,UAAU,EAAC;AAFI,CAAnB;;AAKA,MAAMC,OAAO,GAAC,CAACC,KAAK,GAAEJ,YAAR,EAAsBK,MAAtB,KAA+B;AACvC,QAAMC,QAAQ,qBAAKF,KAAL,CAAd;;AACA,UAAOC,MAAM,CAACE,IAAd;AACI,SAAK,qBAAL;AACED,MAAAA,QAAQ,qBACGF,KADH;AAEAH,QAAAA,SAAS,EAACI,MAAM,CAACG,IAAP,CAAY,CAAZ,CAFV;AAGAN,QAAAA,UAAU,EAACG,MAAM,CAACG,IAAP,CAAY,CAAZ;AAHX,QAAR;AAKA,aAAOF,QAAP;AACA;;AACA;AACA,aAAOA,QAAP;AAVN;AAYL,CAdD;;AAeA,eAAeH,OAAf","sourcesContent":["const initialState={\r\n    usersList:[],\r\n    eventsList:[]\r\n}\r\n\r\nconst reducer=(state =initialState, action)=>{\r\n      const newState={...state};\r\n      switch(action.type){\r\n          case \"get_user_event_data\" :\r\n            newState={\r\n                    ...state,\r\n                    usersList:action.data[0],\r\n                    eventsList:action.data[1] \r\n                };\r\n            return newState;\r\n            break;\r\n            default :\r\n            return newState;\r\n      }      \r\n}\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}