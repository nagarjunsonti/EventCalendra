{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport { AppBar, Toolbar, Typography, CssBaseline, Container, Box } from '@material-ui/core';\nimport imgLogo from './images/spectrum_logo.png';\nimport TableContainer from './container/tablecontainer';\nimport './App.css';\nimport UserRows from './data/Userdata';\nimport EventRows from './data/EventData';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction App(props) {\n  //@getUserData call API for get userdata\n  const getUserData = () => {\n    return {\n      UserRows\n    };\n  }; //@geteventData call API for get eventdata\n\n\n  const geteventData = () => {\n    return {\n      EventRows\n    };\n  };\n\n  useEffect(() => {\n    const userdata = new Promise(resolve => {\n      resolve(getUserData());\n    });\n    const eventdata = new Promise(resolve => {\n      resolve(geteventData());\n    });\n    Promise.all([userdata, eventdata]).then(values => {\n      console.log(values[0]);\n      props.updateUserEventdata(values);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgLogo,\n    alt: \"spectrum global\",\n    with: \"50px\",\n    height: \"50px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    paddingleft: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Spectrum Global Events Calender\"))), React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Box, {\n    my: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n}\n\nApp.PropTypes = {\n  usersList: PropTypes.array,\n  eventsList: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    usersList: state.usersList,\n    eventsList: state.eventsList\n  };\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    updateUserEventdata: responseData => {\n      dispatch({\n        type: \"get_user_event_data\",\n        data: responseData\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);","map":{"version":3,"sources":["C:/projects/spectrum/src/App.js"],"names":["React","useEffect","AppBar","Toolbar","Typography","CssBaseline","Container","Box","imgLogo","TableContainer","UserRows","EventRows","connect","PropTypes","App","props","getUserData","geteventData","userdata","Promise","resolve","eventdata","all","then","values","console","log","updateUserEventdata","catch","error","usersList","array","eventsList","mapStateToProps","state","mapDispachToProps","dispatch","responseData","type","data"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {AppBar, Toolbar,Typography,CssBaseline, Container, Box} from '@material-ui/core';\nimport imgLogo from './images/spectrum_logo.png';\nimport TableContainer from './container/tablecontainer'\nimport './App.css';\nimport UserRows from './data/Userdata';\nimport EventRows from './data/EventData';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction App(props) {\n  //@getUserData call API for get userdata\n  const getUserData=()=>{\n    return {UserRows}\n  }\n  \n  //@geteventData call API for get eventdata\n  const geteventData=()=>{\n    return {EventRows}\n  }\n  useEffect(()=>{\n     const userdata=new Promise((resolve)=>{\n        resolve(getUserData());\n     });\n     const eventdata=new Promise((resolve)=>{\n       resolve(geteventData());\n    });\n\n     Promise.all([userdata,eventdata]).then(values=>{\n       console.log(values[0]);\n        props.updateUserEventdata(values);\n     }).catch((error)=>{\n        console.log(error)\n     });\n  },[])\n  return (\n    <div className=\"App\">\n    <CssBaseline />\n    <AppBar>\n      <Toolbar>                  \n        <img src={imgLogo} alt=\"spectrum global\" with=\"50px\" height=\"50px\" />\n        <Typography variant=\"h6\" paddingleft={10}>Spectrum Global Events Calender</Typography>\n      </Toolbar>\n    </AppBar>\n    <Toolbar />\n    <Container>\n      <Box my={2}>{                    \n            <TableContainer/>                \n        }\n      </Box>\n    </Container>    \n  </div>\n  );\n}\nApp.PropTypes={  \n  usersList:PropTypes.array,\n  eventsList:PropTypes.array \n}\nconst mapStateToProps=(state)=>{\n  return {\n          usersList:state.usersList,\n          eventsList:state.eventsList\n        }\n}\nconst mapDispachToProps =(dispatch)=>{\n  return {\n    updateUserEventdata:(responseData)=>{\n      dispatch({type:\"get_user_event_data\", data:responseData})\n    }\n  }\n} \n\nexport default connect(mapStateToProps,mapDispachToProps)(App);\n"]},"metadata":{},"sourceType":"module"}