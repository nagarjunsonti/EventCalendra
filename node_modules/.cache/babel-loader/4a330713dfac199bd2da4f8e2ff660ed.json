{"ast":null,"code":"/*!\n * Cluster - utils\n * Copyright (c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n/**\n * Frame the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\nexports.frame = function (obj) {\n  return JSON.stringify(obj) + '\\n';\n};\n/**\n * Fast alternative to `Array.prototype.slice.call()`.\n *\n * @param {Arguments} args\n * @param {Number} index\n * @return {Array}\n * @api private\n */\n\n\nexports.toArray = function (args, index) {\n  var arr = [],\n      len = args.length;\n\n  for (var i = index || 0; i < len; ++i) {\n    arr.push(args[i]);\n  }\n\n  return arr;\n};\n/**\n * Format byte-size.\n *\n * @param {Number} bytes\n * @return {String}\n * @api private\n */\n\n\nexports.formatBytes = function (bytes) {\n  var kb = 1024,\n      mb = 1024 * kb,\n      gb = 1024 * mb;\n  if (bytes < kb) return bytes + 'b';\n  if (bytes < mb) return (bytes / kb).toFixed(2) + 'kb';\n  if (bytes < gb) return (bytes / mb).toFixed(2) + 'mb';\n  return (bytes / gb).toFixed(2) + 'gb';\n};\n/**\n * Format date difference between `a` and `b`.\n *\n * @param {Date} a\n * @param {Date} b\n * @return {String}\n * @api private\n */\n\n\nexports.formatDateRange = function (a, b) {\n  var diff = a > b ? a - b : b - a,\n      second = 1000,\n      minute = second * 60,\n      hour = minute * 60,\n      day = hour * 24;\n\n  function unit(name, n) {\n    return n + ' ' + name + (1 == n ? '' : 's');\n  }\n\n  if (diff < second) return unit('millisecond', diff);\n  if (diff < minute) return unit('second', (diff / second).toFixed(0));\n  if (diff < hour) return unit('minute', (diff / minute).toFixed(0));\n  if (diff < day) return unit('hour', (diff / hour).toFixed(0));\n  return unit('day', (diff / day).toFixed(1));\n};\n/**\n * Unshift a callback.\n *\n * @param {Object} obj\n * @param {String} event\n * @param {String} fn\n * @api private\n */\n\n\nexports.unshiftListener = function (obj, event, fn) {\n  if (Array.isArray(obj._events[event])) {\n    obj._events[event].unshift(fn);\n  } else {\n    obj._events[event] = [fn, obj._events[event]];\n  }\n};","map":null,"metadata":{},"sourceType":"script"}