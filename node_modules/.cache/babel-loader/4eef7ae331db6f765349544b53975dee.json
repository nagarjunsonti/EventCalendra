{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\component\\\\AddEventsTable.js\";\nimport React, { useState } from 'react';\nimport TableWidget from '../widgets/TableWidget';\nimport { connect } from 'react-redux';\nimport SideBarcomponent from './SideBarcomponent';\nimport PropTypes from 'prop-types';\nimport { eventColumns } from '../data/EventData';\n\nfunction AddEventsTable(props) {\n  const eventsList = props.eventsList;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(TableWidget, {\n    rows: eventsList,\n    defaultSort: \"name\",\n    columns: eventColumns,\n    tableTitle: \"Add Evvents\",\n    handleAddeRows: props.addSelectedRows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    eventsList: state.eventsList\n  };\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    addSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"add_event_data\",\n        data: seletedRowIds\n      });\n    }\n  };\n};\n\nEventtable.propTypes = {\n  title: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  eventsList: PropTypes.array.isRequired,\n  addSelectedRows: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispachToProps)(Eventtable);","map":{"version":3,"sources":["C:/projects/spectrum/src/component/AddEventsTable.js"],"names":["React","useState","TableWidget","connect","SideBarcomponent","PropTypes","eventColumns","AddEventsTable","props","eventsList","addSelectedRows","mapStateToProps","state","mapDispachToProps","dispatch","seletedRowIds","type","data","Eventtable","propTypes","title","string","isRequired","columns","array","func"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA,QACnBC,UADmB,GACPD,KADO,CACnBC,UADmB;AAG1B,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEA,UADR;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,OAAO,EAAEH,YAHX;AAIE,IAAA,UAAU,EAAE,aAJd;AAKE,IAAA,cAAc,EAAEE,KAAK,CAACE,eALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWH;;AAED,MAAMC,eAAe,GAAEC,KAAD,IAAS;AAC7B,SAAO;AACLH,IAAAA,UAAU,EAACG,KAAK,CAACH;AADZ,GAAP;AAGD,CAJD;;AAKA,MAAMI,iBAAiB,GAAEC,QAAD,IAAY;AAClC,SAAO;AACLJ,IAAAA,eAAe,EAAEK,aAAD,IAAiB;AAC/BD,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC,gBAAN;AAAwBC,QAAAA,IAAI,EAACF;AAA7B,OAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAOAG,UAAU,CAACC,SAAX,GAAqB;AACnBC,EAAAA,KAAK,EAACf,SAAS,CAACgB,MAAV,CAAiBC,UADJ;AAEnBC,EAAAA,OAAO,EAAClB,SAAS,CAACmB,KAAV,CAAgBF,UAFL;AAGnBb,EAAAA,UAAU,EAACJ,SAAS,CAACmB,KAAV,CAAgBF,UAHR;AAInBZ,EAAAA,eAAe,EAACL,SAAS,CAACoB,IAAV,CAAeH;AAJZ,CAArB;AAMA,eAAenB,OAAO,CAACQ,eAAD,EAAkBE,iBAAlB,CAAP,CAA4CK,UAA5C,CAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport TableWidget from '../widgets/TableWidget';\r\nimport {connect} from 'react-redux';\r\nimport SideBarcomponent from './SideBarcomponent';\r\nimport PropTypes from 'prop-types';\r\nimport { eventColumns } from '../data/EventData';\r\nfunction AddEventsTable(props){\r\n    const {eventsList}=props;    \r\n    \r\n    return (\r\n        <React.Fragment>            \r\n            <TableWidget \r\n              rows={eventsList} \r\n              defaultSort='name'\r\n              columns={eventColumns}\r\n              tableTitle={\"Add Evvents\"}             \r\n              handleAddeRows={props.addSelectedRows}                                    \r\n            />            \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    eventsList:state.eventsList\r\n  }\r\n}\r\nconst mapDispachToProps=(dispatch)=>{\r\n  return {\r\n    addSelectedRows:(seletedRowIds)=>{\r\n      dispatch({type:\"add_event_data\", data:seletedRowIds})\r\n    }\r\n  }\r\n}\r\nEventtable.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  columns:PropTypes.array.isRequired,\r\n  eventsList:PropTypes.array.isRequired,\r\n  addSelectedRows:PropTypes.func.isRequired  \r\n}\r\nexport default connect(mapStateToProps, mapDispachToProps)(Eventtable);"]},"metadata":{},"sourceType":"module"}