{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\widgets\\\\TableWidget.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Switch from '@material-ui/core/Switch';\nimport moment from \"moment\";\nimport TextField from '@material-ui/core/TextField';\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort,\n        columns = props.columns,\n        actionColumn = props.actionColumn;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  const getTableHeaderCell = headCell => {\n    if (headCell.sortFlag) {\n      return React.createElement(TableSortLabel, {\n        active: orderBy === headCell.key_id,\n        direction: order,\n        onClick: createSortHandler(headCell.key_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, headCell.label, orderBy === headCell.key_id ? React.createElement(\"span\", {\n        className: classes.visuallyHidden,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, headCell.label, \" \");\n    }\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), columns.map(headCell => React.createElement(TableCell, {\n    key: headCell.key_id,\n    align: 'center',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.key_id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, getTableHeaderCell(headCell))), actionColumn && React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Event Actions \")));\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected,\n        tableTitle = props.tableTitle,\n        checkBoxSelected = props.checkBoxSelected,\n        toolbarConfig = props.toolbarConfig,\n        handleTableSearch = props.handleTableSearch,\n        searchPlaceholder = props.searchPlaceholder,\n        searchFilterValue = props.searchFilterValue,\n        showAllEvents = props.showAllEvents;\n  const toolBartitle = toolbarConfig ? toolbarConfig.title : \"Delete\";\n\n  const seetToolBarAction = () => {\n    const selectedRows = checkBoxSelected;\n    props.handleToolBarAction(selectedRows);\n    props.handleSelectAllClick();\n  };\n\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, tableTitle), numSelected > 0 ? React.createElement(Tooltip, {\n    title: toolBartitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"toolBartitle\",\n    onClick: () => {\n      seetToolBarAction();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, toolbarConfig && toolbarConfig.icon === \"add\" ? React.createElement(AddCircleOutlineIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }) : React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: \"tableToolbarIconDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    placeholder: searchPlaceholder,\n    onChange: e => handleTableSearch(e.target.value, tableTitle),\n    value: searchFilterValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), tableTitle !== \"Add Evvents\" ? React.createElement(Tooltip, {\n    title: \"View All Events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"View All Events\",\n    onClick: e => showAllEvents(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(VisibilityTwoToneIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))) : \" Search\"));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  tableTitle: PropTypes.string.isRequired,\n  checkBoxSelected: PropTypes.array\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(props) {\n  const rows = props.rows,\n        columns = props.columns,\n        tableTitle = props.tableTitle,\n        defaultSort = props.defaultSort,\n        toolbarConfig = props.toolbarConfig;\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState(defaultSort),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(5),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        rowsPerPage = _React$useState10[0],\n        setRowsPerPage = _React$useState10[1];\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event && event.target.checked) {\n      const newSelecteds = rows.map(n => n.index);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleCheckBoxClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getFormatDate = date => {\n    let formateDate = moment(date).format(\"DD-MM-YYYY h:mm a\");\n    return formateDate;\n  };\n\n  const getTableCell = (row, labelId) => {\n    let columnsList = columns;\n    return columnsList.map(column => {\n      let columnData = row[column.key_id];\n\n      if (column.key_id === \"scheduledfor\") {\n        columnData = getFormatDate(row[column.key_id]);\n      }\n\n      return React.createElement(TableCell, {\n        key: row[column.key_id],\n        component: \"th\",\n        align: column.numeric ? 'center' : 'left',\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, columnData);\n    });\n  }; // const handleEventDisplayToggle = (event) => {\n  // }\n\n\n  const getIconComponent = (row, action) => {\n    let disabledButton = row.isShowOnCalander && row.isShowOnCalander ? true : false;\n\n    switch (action.icon) {\n      case 'view':\n        return React.createElement(IconButton, {\n          disabled: disabledButton,\n          \"aria-label\": action.title,\n          onClick: () => {\n            action.callBack(row);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, React.createElement(VisibilityTwoToneIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }));\n\n      case 'add':\n        return React.createElement(IconButton, {\n          disabled: disabledButton,\n          \"aria-label\": action.title,\n          onClick: () => {\n            action.callBack(row);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(AddCircleOutlineIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }));\n\n      case 'delete':\n        return React.createElement(IconButton, {\n          disabled: disabledButton,\n          \"aria-label\": action.title,\n          onClick: () => {\n            action.callBack(row);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(DeleteIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }));\n\n      case 'switch':\n        return React.createElement(IconButton, {\n          \"aria-label\": action.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          checked: row.isShowOnCalander,\n          onChange: () => {\n            props.handleEventDisplayToggle(row.index);\n          },\n          value: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }));\n\n      default:\n        return React.createElement(IconButton, {\n          \"aria-label\": action.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(VisibilityTwoToneIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }));\n    }\n  };\n\n  const getActionTableCell = (labelId, row) => {\n    return React.createElement(TableCell, {\n      component: \"th\",\n      align: \"center\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actionLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, props.actionColumn.map(action => {\n      return React.createElement(Tooltip, {\n        title: action.title,\n        key: Math.random(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, getIconComponent(row, action)) // <Link component=\"button\"\n      //   variant=\"body2\"\n      //   onClick={() => {action.callBack(row);}}\n      // >\n      //   <Tooltip title={action.title}>\n      //     <IconButton aria-label={action.title}>\n      //       {getIconComponent(row,action.icon)}\n      //     </IconButton>\n      //   </Tooltip>\n      // </Link>\n      ;\n    })));\n  };\n\n  const isSelected = index => selected.indexOf(index) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    toolbarConfig: toolbarConfig,\n    tableTitle: tableTitle,\n    checkBoxSelected: selected,\n    handleToolBarAction: props.handleToolBarAction,\n    handleSelectAllClick: handleSelectAllClick,\n    handleTableSearch: props.handleTableSearch,\n    showAllEvents: props.showAllEvents,\n    searchPlaceholder: props.searchPlaceholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: 'small',\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    key: Math.random(),\n    columns: columns,\n    actionColumn: props.actionColumn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, stableSort(rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.index);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true // onClick={event => handleClick(event, row.name)}\n      ,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row._id,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onClick: event => handleCheckBoxClick(event, row.index),\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    })), getTableCell(row, labelId), props.actionColumn && getActionTableCell(labelId, row));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 33 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:/projects/spectrum/src/widgets/TableWidget.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","VisibilityTwoToneIcon","AddCircleOutlineIcon","Switch","moment","TextField","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","columns","actionColumn","createSortHandler","property","event","getTableHeaderCell","headCell","sortFlag","key_id","label","visuallyHidden","disablePadding","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","tableTitle","checkBoxSelected","toolbarConfig","handleTableSearch","searchPlaceholder","searchFilterValue","showAllEvents","toolBartitle","seetToolBarAction","selectedRows","handleToolBarAction","handleSelectAllClick","icon","e","target","value","propTypes","number","isRequired","string","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","rows","defaultSort","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","checked","newSelecteds","n","handleCheckBoxClick","id","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","getFormatDate","date","formateDate","format","getTableCell","row","labelId","columnsList","column","columnData","numeric","getIconComponent","action","disabledButton","isShowOnCalander","callBack","handleEventDisplayToggle","getActionTableCell","Math","random","isSelected","emptyRows","min","isItemSelected","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport moment from \"moment\";\r\nimport TextField from '@material-ui/core/TextField';\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, columns, actionColumn } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n  const getTableHeaderCell = (headCell) => {\r\n    if (headCell.sortFlag) {\r\n      return (\r\n        <TableSortLabel\r\n          active={orderBy === headCell.key_id}\r\n          direction={order}\r\n          onClick={createSortHandler(headCell.key_id)}\r\n        >\r\n          {headCell.label}\r\n          {orderBy === headCell.key_id ? (\r\n            <span className={classes.visuallyHidden}>\r\n              {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n            </span>\r\n          ) : null}\r\n        </TableSortLabel>\r\n      );\r\n    } else {\r\n      return (<div>{headCell.label} </div>)\r\n    }\r\n  }\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.key_id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.key_id ? order : false}\r\n          >\r\n            {getTableHeaderCell(headCell)}\r\n          </TableCell>\r\n        ))}\r\n        {(actionColumn) && <TableCell >Event Actions </TableCell>}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, tableTitle, checkBoxSelected, toolbarConfig, handleTableSearch, searchPlaceholder,searchFilterValue, showAllEvents} = props;\r\n  const toolBartitle=(toolbarConfig)?toolbarConfig.title:\"Delete\";\r\n  const seetToolBarAction = () => {\r\n    const selectedRows = checkBoxSelected;\r\n    props.handleToolBarAction(selectedRows);\r\n    props.handleSelectAllClick();\r\n  }\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            {tableTitle}\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title={toolBartitle}>\r\n          <IconButton aria-label={\"toolBartitle\"} onClick={() => { seetToolBarAction() }}>\r\n            {(toolbarConfig && toolbarConfig.icon === \"add\")?<AddCircleOutlineIcon />:<DeleteIcon />}\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <div className={\"tableToolbarIconDiv\"}>\r\n          <TextField  placeholder={searchPlaceholder} onChange={(e)=>handleTableSearch(e.target.value, tableTitle)} value={searchFilterValue}/>\r\n            {\r\n              (tableTitle !== \"Add Evvents\")?(\r\n                  <Tooltip title=\"View All Events\">\r\n                    <IconButton aria-label=\"View All Events\" onClick={(e)=>showAllEvents()}>\r\n                      <VisibilityTwoToneIcon />\r\n                    </IconButton>\r\n                \r\n                  </Tooltip>):\" Search\"\r\n              \r\n            }\r\n            \r\n            \r\n          </div>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  tableTitle: PropTypes.string.isRequired,\r\n  checkBoxSelected: PropTypes.array\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {  \r\n  const { rows, columns, tableTitle, defaultSort, toolbarConfig } = props;\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState(defaultSort);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event && event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.index);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleCheckBoxClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const getFormatDate = (date) => {\r\n    let formateDate = moment(date).format(\"DD-MM-YYYY h:mm a\");\r\n    return formateDate;\r\n  }\r\n  const getTableCell = (row, labelId) => {\r\n    let columnsList = columns;\r\n    return columnsList.map((column) => {\r\n      let columnData = row[column.key_id];\r\n      if (column.key_id === \"scheduledfor\") {\r\n        columnData = getFormatDate(row[column.key_id]);\r\n      }\r\n      return <TableCell key={row[column.key_id]} component=\"th\" align={column.numeric ? 'center' : 'left'} scope=\"row\" padding=\"none\">\r\n        {columnData}\r\n      </TableCell>\r\n    })\r\n  }\r\n  // const handleEventDisplayToggle = (event) => {\r\n\r\n  // }\r\n  const getIconComponent = (row, action) => {\r\n    let disabledButton = (row.isShowOnCalander && row.isShowOnCalander) ? true : false;\r\n    switch (action.icon) {\r\n      case 'view':\r\n        return (<IconButton disabled={disabledButton} aria-label={action.title} onClick={() => { action.callBack(row) }}>\r\n          <VisibilityTwoToneIcon />\r\n        </IconButton>)\r\n      case 'add':\r\n        return (<IconButton disabled={disabledButton} aria-label={action.title} onClick={() => { action.callBack(row) }}>\r\n          <AddCircleOutlineIcon />\r\n        </IconButton>)\r\n      case 'delete':\r\n        return (<IconButton disabled={disabledButton} aria-label={action.title} onClick={() => { action.callBack(row) }}>\r\n          <DeleteIcon />\r\n        </IconButton>)\r\n      case 'switch':\r\n        return (<IconButton aria-label={action.title}>\r\n          <Switch checked={row.isShowOnCalander} onChange={() => { props.handleEventDisplayToggle(row.index) }} value={true} />\r\n        </IconButton>)\r\n      default:\r\n        return (<IconButton aria-label={action.title}>\r\n          <VisibilityTwoToneIcon />\r\n        </IconButton>)\r\n    }\r\n\r\n  }\r\n\r\n  const getActionTableCell = (labelId, row) => {\r\n    return (\r\n      <TableCell component=\"th\" align='center' id={labelId} scope=\"row\" padding=\"none\" >\r\n        <div className={\"actionLinks\"}>\r\n          {props.actionColumn.map((action) => {\r\n            return (\r\n              <Tooltip title={action.title} key={Math.random()}>\r\n                {getIconComponent(row, action)}\r\n              </Tooltip>\r\n              // <Link component=\"button\"\r\n              //   variant=\"body2\"\r\n              //   onClick={() => {action.callBack(row);}}\r\n              // >\r\n              //   <Tooltip title={action.title}>\r\n              //     <IconButton aria-label={action.title}>\r\n              //       {getIconComponent(row,action.icon)}\r\n              //     </IconButton>\r\n              //   </Tooltip>\r\n              // </Link>\r\n            )\r\n          })}\r\n        </div>\r\n      </TableCell>\r\n    )\r\n  }\r\n  const isSelected = index => selected.indexOf(index) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} toolbarConfig={toolbarConfig} tableTitle={tableTitle} checkBoxSelected={selected} handleToolBarAction={props.handleToolBarAction} handleSelectAllClick={handleSelectAllClick}  handleTableSearch={props.handleTableSearch } showAllEvents={props.showAllEvents} searchPlaceholder={props.searchPlaceholder}  />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'small'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              key={Math.random()}\r\n              columns={columns}\r\n              actionColumn={props.actionColumn}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.index);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      // onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row._id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={event => handleCheckBoxClick(event, row.index)}\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                          key={Math.random()}\r\n                        />\r\n                      </TableCell>\r\n                      {getTableCell(row, labelId)}\r\n                      {(props.actionColumn) && getActionTableCell(labelId, row)}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}