{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\component\\\\SideBarcomponent.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport { CssBaseline, Container, Box } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from \"moment\";\nimport AddEventsTable from './AddEventsTable';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport './sidebarCss.css';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    flexDirection: 'rowReverse'\n  }\n}));\nconst localizer = momentLocalizer(moment);\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n});\n\nfunction SideBarcomponent(props) {\n  //const [modelOpen, closeModelClick]=props;\n  const modelOpen = props.modelOpen,\n        calanderDataList = props.calanderDataList,\n        closeModelClick = props.closeModelClick,\n        showAddTable = props.showAddTable;\n  const classes = useStyles(); //const {dataList} = props;\n  //const [modelOpen, setOpen] = React.useState(false);\n  //   const handleClickOpen = () => {\n  //     setOpen(true);\n  //   };\n  // const closeModelClick = () => {\n  //   setOpen(false);\n  // };\n\n  let eventsArrayList = [];\n\n  if (calanderDataList && calanderDataList.length) {\n    calanderDataList.forEach(element => {\n      if (!element.isShowOnCalander) {\n        let data = {\n          id: element.index,\n          start: moment(element.scheduledfor).toDate(),\n          end: moment(element.endScheduar).toDate(),\n          eventClasses: 'optionalEvent',\n          title: element.organizer,\n          description: element.about\n        };\n        eventsArrayList.push(data);\n      }\n    });\n  } // const eventsArray = [\n  //   {\n  //     start: new Date(),\n  //     end: new Date(moment().add(1, \"hours\")),\n  //     eventClasses: 'optionalEvent',\n  //     title: 'test event',\n  //     description: 'This is a test description of an event',\n  //   },\n  //   {\n  //     start: new Date(moment().add(1, \"days\")),\n  //     end: new Date(moment().add(1, \"days\").add(2, \"hours\")),\n  //     title: 'test event',\n  //     description: 'This is a test description of an event',\n  //     data: 'you can add what ever random data you may want to use later',\n  //   },\n  // ];\n\n\n  const handleSelect = ({\n    start,\n    end\n  }) => {};\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    fullScreen: true,\n    open: modelOpen,\n    onClose: closeModelClick,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'sidebarHeaderDiv',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    clsaaName: 'sideBarTitleDiv',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.sideBarTitle, \" \")), React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: closeModelClick,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))))), React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Box, {\n    my: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, showAddTable ? React.createElement(AddEventsTable, {\n    addUserData: calanderDataList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }) : React.createElement(Calendar, {\n    localizer: localizer,\n    defaultDate: new Date(),\n    defaultView: \"month\",\n    events: eventsArrayList,\n    style: {\n      height: \"80vh\"\n    },\n    onSelectEvent: event => alert(event.title),\n    onSelectSlot: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))))));\n}\n\nexport default SideBarcomponent;","map":{"version":3,"sources":["C:/projects/spectrum/src/component/SideBarcomponent.js"],"names":["React","makeStyles","Dialog","CssBaseline","Container","Box","AppBar","Toolbar","IconButton","CloseIcon","Slide","Calendar","momentLocalizer","moment","AddEventsTable","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","flexDirection","localizer","Transition","forwardRef","props","ref","SideBarcomponent","modelOpen","calanderDataList","closeModelClick","showAddTable","classes","eventsArrayList","length","forEach","element","isShowOnCalander","data","id","index","start","scheduledfor","toDate","end","endScheduar","eventClasses","organizer","description","about","push","handleSelect","sideBarTitle","Date","height","event","alert"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { CssBaseline, Container, Box } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from \"moment\";\r\nimport AddEventsTable from './AddEventsTable'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport './sidebarCss.css'\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n    flexDirection: 'rowReverse'\r\n  },\r\n}));\r\n\r\nconst localizer = momentLocalizer(moment)\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction SideBarcomponent(props) {\r\n  //const [modelOpen, closeModelClick]=props;\r\n  const { modelOpen, calanderDataList, closeModelClick, showAddTable } = props;\r\n  const classes = useStyles();\r\n  //const {dataList} = props;\r\n  //const [modelOpen, setOpen] = React.useState(false);\r\n\r\n  //   const handleClickOpen = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  // const closeModelClick = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  let eventsArrayList = [];\r\n  if (calanderDataList && calanderDataList.length) {\r\n\r\n    calanderDataList.forEach(element => {\r\n      if (!element.isShowOnCalander) {\r\n        let data = {\r\n          id: element.index,\r\n          start: moment(element.scheduledfor).toDate(),\r\n          end: moment(element.endScheduar).toDate(),\r\n          eventClasses: 'optionalEvent',\r\n          title: element.organizer,\r\n          description: element.about,\r\n        }\r\n        eventsArrayList.push(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  // const eventsArray = [\r\n  //   {\r\n  //     start: new Date(),\r\n  //     end: new Date(moment().add(1, \"hours\")),\r\n  //     eventClasses: 'optionalEvent',\r\n  //     title: 'test event',\r\n  //     description: 'This is a test description of an event',\r\n  //   },\r\n  //   {\r\n  //     start: new Date(moment().add(1, \"days\")),\r\n  //     end: new Date(moment().add(1, \"days\").add(2, \"hours\")),\r\n  //     title: 'test event',\r\n  //     description: 'This is a test description of an event',\r\n  //     data: 'you can add what ever random data you may want to use later',\r\n  //   },\r\n  // ];\r\n  const handleSelect = ({ start, end }) => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button> */}\r\n\r\n      <Dialog fullScreen open={modelOpen} onClose={closeModelClick} TransitionComponent={Transition}>\r\n        <div className={'sidebarHeaderDiv'}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <div clsaaName={'sideBarTitleDiv'}><h2>{props.sideBarTitle} </h2></div>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={closeModelClick} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n        <CssBaseline />\r\n        <Container>\r\n          <Box my={2}>\r\n            <div className={\"sidebarContainer\"}>\r\n              {(showAddTable) ? <AddEventsTable addUserData={calanderDataList}/> : <Calendar\r\n                localizer={localizer}\r\n                defaultDate={new Date()}\r\n                defaultView=\"month\"\r\n                events={eventsArrayList}\r\n                style={{ height: \"80vh\" }}\r\n                onSelectEvent={event => alert(event.title)}\r\n                onSelectSlot={handleSelect}\r\n              />}\r\n            </div>\r\n          </Box>\r\n        </Container>\r\n      </Dialog>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBarcomponent;"]},"metadata":{},"sourceType":"module"}