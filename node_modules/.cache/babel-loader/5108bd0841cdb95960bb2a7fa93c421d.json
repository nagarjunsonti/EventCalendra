{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\component\\\\userTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TableWidget from '../widgets/TableWidget';\nimport SideBarcomponent from './SideBarcomponent';\nimport PropTypes from 'prop-types';\n\nfunction Usertable(props) {\n  const title = props.title,\n        columns = props.columns,\n        tableData = props.tableData;\n\n  const _useState = useState({\n    modelOpen: false,\n    calanderDataList: tableData,\n    showAddTable: false,\n    searchFilterValue: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        modelData = _useState2[0],\n        setModelData = _useState2[1];\n\n  const handleClickModelOpen = data => {\n    console.log(data);\n    let popupData = [data];\n    setModelData({\n      modelOpen: true,\n      calanderDataList: popupData\n    });\n  };\n\n  const handleClickModelClose = data => {\n    console.log(data);\n    setModelData(_objectSpread({}, modelData, {\n      modelOpen: false,\n      showAddTable: false\n    }));\n  };\n\n  const handleClicAddEvents = data => {\n    console.log(data);\n    let popupData = [data];\n    setModelData({\n      modelOpen: true,\n      calanderDataList: popupData,\n      showAddTable: true\n    });\n  }; // handleTableSearch = (searchedData) => {\n  // }\n  // const deleteSelectedRows=(seletedRowIds)=>{\n  //   let filterData=usersList.filter((value)=>{\n  //       return (!seletedRowIds.includes(value.user_index))\n  //   });\n  // }\n\n\n  const showAllEvents = () => {\n    setModelData(_objectSpread({}, modelData, {\n      calanderDataList: tableData,\n      modelOpen: true\n    }));\n  };\n\n  const actionColumn = [{\n    title: \"View events\",\n    // handleViewAction:{handleClickModelClose}\n    callBack: handleClickModelOpen,\n    icon: \"view\"\n  }, {\n    title: \"Add Events\",\n    //handleAddAction:{handleClickModelClose}\n    callBack: handleClicAddEvents,\n    icon: \"add\"\n  }];\n  const modelOpen = modelData.modelOpen,\n        calanderDataList = modelData.calanderDataList,\n        showAddTable = modelData.showAddTable,\n        searchFilterValue = modelData.searchFilterValue;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TableWidget, {\n    rows: tableData,\n    defaultSort: \"name\",\n    columns: columns,\n    tableTitle: title,\n    showAllEvents: showAllEvents,\n    handleToolBarAction: props.handleDeleteSelectedRows,\n    actionColumn: actionColumn,\n    handleTableSearch: props.handleTablseSearch,\n    searchPlaceholder: \"Search By Name\",\n    searchFilterValue: searchFilterValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(SideBarcomponent, {\n    modelOpen: modelOpen,\n    closeModelClick: handleClickModelClose,\n    calanderDataList: calanderDataList,\n    showAddTable: showAddTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nUsertable.propTypes = {\n  title: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  tableData: PropTypes.array.isRequired,\n  handleDeleteSelectedRows: PropTypes.func.isRequired\n};\nexport default Usertable;","map":{"version":3,"sources":["C:/projects/spectrum/src/component/userTable.js"],"names":["React","useState","TableWidget","SideBarcomponent","PropTypes","Usertable","props","title","columns","tableData","modelOpen","calanderDataList","showAddTable","searchFilterValue","modelData","setModelData","handleClickModelOpen","data","console","log","popupData","handleClickModelClose","handleClicAddEvents","showAllEvents","actionColumn","callBack","icon","handleDeleteSelectedRows","handleTablseSearch","propTypes","string","isRequired","array","func"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,QAEhBC,KAFgB,GAEaD,KAFb,CAEhBC,KAFgB;AAAA,QAETC,OAFS,GAEaF,KAFb,CAETE,OAFS;AAAA,QAEAC,SAFA,GAEaH,KAFb,CAEAG,SAFA;;AAAA,oBAIQR,QAAQ,CAAC;AACvCS,IAAAA,SAAS,EAAC,KAD6B;AAEvCC,IAAAA,gBAAgB,EAACF,SAFsB;AAGvCG,IAAAA,YAAY,EAAC,KAH0B;AAIvCC,IAAAA,iBAAiB,EAAC;AAJqB,GAAD,CAJhB;AAAA;AAAA,QAIjBC,SAJiB;AAAA,QAINC,YAJM;;AAWtB,QAAMC,oBAAoB,GAAEC,IAAD,IAAQ;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,SAAS,GAAC,CAACH,IAAD,CAAd;AACAF,IAAAA,YAAY,CAAC;AAACL,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,gBAAgB,EAACS;AAAjC,KAAD,CAAZ;AACD,GAJD;;AAKA,QAAMC,qBAAqB,GAAEJ,IAAD,IAAQ;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,IAAAA,YAAY,mBAAKD,SAAL;AAAgBJ,MAAAA,SAAS,EAAC,KAA1B;AAAiCE,MAAAA,YAAY,EAAC;AAA9C,OAAZ;AACD,GAHD;;AAIA,QAAMU,mBAAmB,GAAEL,IAAD,IAAQ;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,SAAS,GAAC,CAACH,IAAD,CAAd;AACAF,IAAAA,YAAY,CAAC;AAACL,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,gBAAgB,EAACS,SAAjC;AAA2CR,MAAAA,YAAY,EAAC;AAAxD,KAAD,CAAZ;AACD,GAJD,CApBsB,CAyBtB;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AACF,QAAMW,aAAa,GAAC,MAAI;AACtBR,IAAAA,YAAY,mBAAKD,SAAL;AAAgBH,MAAAA,gBAAgB,EAACF,SAAjC;AAA2CC,MAAAA,SAAS,EAAC;AAArD,OAAZ;AACD,GAFD;;AAGA,QAAMc,YAAY,GAAG,CACnB;AACEjB,IAAAA,KAAK,EAAE,aADT;AAEE;AACAkB,IAAAA,QAAQ,EAACT,oBAHX;AAIEU,IAAAA,IAAI,EAAC;AAJP,GADmB,EAOnB;AACEnB,IAAAA,KAAK,EAAE,YADT;AAEE;AACAkB,IAAAA,QAAQ,EAACH,mBAHX;AAIEI,IAAAA,IAAI,EAAC;AAJP,GAPmB,CAArB;AArCwB,QAmDjBhB,SAnDiB,GAmD6CI,SAnD7C,CAmDjBJ,SAnDiB;AAAA,QAmDNC,gBAnDM,GAmD6CG,SAnD7C,CAmDNH,gBAnDM;AAAA,QAmDYC,YAnDZ,GAmD6CE,SAnD7C,CAmDYF,YAnDZ;AAAA,QAmD0BC,iBAnD1B,GAmD6CC,SAnD7C,CAmD0BD,iBAnD1B;AAoDxB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEJ,SADR;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,OAAO,EAAED,OAHX;AAIE,IAAA,UAAU,EAAED,KAJd;AAKE,IAAA,aAAa,EAAEgB,aALjB;AAME,IAAA,mBAAmB,EAAEjB,KAAK,CAACqB,wBAN7B;AAOE,IAAA,YAAY,EAAEH,YAPhB;AAQE,IAAA,iBAAiB,EAAElB,KAAK,CAACsB,kBAR3B;AASE,IAAA,iBAAiB,EAAC,gBATpB;AAUE,IAAA,iBAAiB,EAAEf,iBAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,oBAAC,gBAAD;AACc,IAAA,SAAS,EAAEH,SADzB;AAEc,IAAA,eAAe,EAAEW,qBAF/B;AAGc,IAAA,gBAAgB,EAAEV,gBAHhC;AAIc,IAAA,YAAY,EAAEC,YAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAsBD;;AAEDP,SAAS,CAACwB,SAAV,GAAoB;AAClBtB,EAAAA,KAAK,EAACH,SAAS,CAAC0B,MAAV,CAAiBC,UADL;AAElBvB,EAAAA,OAAO,EAACJ,SAAS,CAAC4B,KAAV,CAAgBD,UAFN;AAGlBtB,EAAAA,SAAS,EAACL,SAAS,CAAC4B,KAAV,CAAgBD,UAHR;AAIlBJ,EAAAA,wBAAwB,EAACvB,SAAS,CAAC6B,IAAV,CAAeF;AAJtB,CAApB;AAMA,eAAe1B,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport TableWidget from '../widgets/TableWidget';\r\nimport SideBarcomponent from './SideBarcomponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Usertable(props) {\r\n\r\n  const { title, columns, tableData} = props;\r\n\r\n  const [modelData, setModelData]=useState({\r\n    modelOpen:false,\r\n    calanderDataList:tableData,\r\n    showAddTable:false,\r\n    searchFilterValue:\"\"\r\n  });  \r\n    \r\n    const handleClickModelOpen=(data)=>{\r\n      console.log(data);\r\n      let popupData=[data];\r\n      setModelData({modelOpen:true,calanderDataList:popupData});\r\n    }\r\n    const handleClickModelClose=(data)=>{\r\n      console.log(data);\r\n      setModelData({...modelData, modelOpen:false, showAddTable:false});\r\n    }\r\n    const handleClicAddEvents=(data)=>{\r\n      console.log(data);\r\n      let popupData=[data];\r\n      setModelData({modelOpen:true,calanderDataList:popupData,showAddTable:true});\r\n    }\r\n    // handleTableSearch = (searchedData) => {\r\n      \r\n    // }\r\n    // const deleteSelectedRows=(seletedRowIds)=>{\r\n    //   let filterData=usersList.filter((value)=>{\r\n    //       return (!seletedRowIds.includes(value.user_index))\r\n    //   });\r\n\r\n    // }\r\n  const showAllEvents=()=>{\r\n    setModelData({...modelData, calanderDataList:tableData,modelOpen:true});\r\n  }\r\n  const actionColumn = [\r\n    {\r\n      title: \"View events\",\r\n      // handleViewAction:{handleClickModelClose}\r\n      callBack:handleClickModelOpen,\r\n      icon:\"view\"\r\n    },\r\n    {\r\n      title: \"Add Events\",\r\n      //handleAddAction:{handleClickModelClose}\r\n      callBack:handleClicAddEvents,\r\n      icon:\"add\"\r\n    }    \r\n  ];\r\n  const {modelOpen, calanderDataList, showAddTable, searchFilterValue}=modelData;\r\n  return (\r\n    <React.Fragment>\r\n      <TableWidget\r\n        rows={tableData}\r\n        defaultSort='name'\r\n        columns={columns}\r\n        tableTitle={title}\r\n        showAllEvents={showAllEvents}\r\n        handleToolBarAction={props.handleDeleteSelectedRows}\r\n        actionColumn={actionColumn}\r\n        handleTableSearch={props.handleTablseSearch} \r\n        searchPlaceholder=\"Search By Name\"\r\n        searchFilterValue={searchFilterValue} \r\n      />\r\n      <SideBarcomponent \r\n                    modelOpen={modelOpen}                    \r\n                    closeModelClick={handleClickModelClose}\r\n                    calanderDataList={calanderDataList}\r\n                    showAddTable={showAddTable}\r\n            />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nUsertable.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  columns:PropTypes.array.isRequired,\r\n  tableData:PropTypes.array.isRequired,\r\n  handleDeleteSelectedRows:PropTypes.func.isRequired  \r\n}\r\nexport default Usertable;"]},"metadata":{},"sourceType":"module"}