{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\component\\\\userTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TableWidget from '../widgets/TableWidget';\nimport SideBarcomponent from './SideBarcomponent';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction Usertable(props) {\n  const title = props.title,\n        columns = props.columns,\n        tableData = props.tableData;\n\n  const _useState = useState({\n    modelOpen: false,\n    calanderDataList: tableData,\n    showAddTable: false,\n    searchFilterValue: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        modelData = _useState2[0],\n        setModelData = _useState2[1];\n\n  const getEventListData = user_idex => {\n    let eventslist = props.eventsList;\n    return eventslist.filter(element => {\n      return element.registerd_user.includes(user_idex);\n    });\n  };\n\n  const handleClickModelOpen = (data, showAll = false) => {\n    console.log(data);\n    let popupData = data.length ? data : [data];\n\n    if (!showAll) {\n      popupData = getEventListData(data.index);\n    } //let popupData=getEventListData(data.index);      \n\n\n    setModelData({\n      modelOpen: true,\n      calanderDataList: popupData\n    });\n  };\n\n  const handleClickModelClose = data => {\n    console.log(data);\n    setModelData(_objectSpread({}, modelData, {\n      modelOpen: false,\n      showAddTable: false\n    }));\n  };\n\n  const handleClicAddEvents = data => {\n    console.log(data);\n    let popupData = [data];\n    setModelData({\n      modelOpen: true,\n      calanderDataList: popupData,\n      showAddTable: true\n    });\n  }; // handleTableSearch = (searchedData) => {\n  // }\n  // const deleteSelectedRows=(seletedRowIds)=>{\n  //   let filterData=usersList.filter((value)=>{\n  //       return (!seletedRowIds.includes(value.user_index))\n  //   });\n  // }\n\n\n  const showAllEvents = () => {\n    handleClickModelOpen(props.eventDataList, true); //setModelData({...modelData, calanderDataList:tableData,modelOpen:true});\n  };\n\n  const actionColumn = [{\n    title: \"View events\",\n    // handleViewAction:{handleClickModelClose}\n    callBack: handleClickModelOpen,\n    icon: \"view\"\n  }, {\n    title: \"Add Events\",\n    //handleAddAction:{handleClickModelClose}\n    callBack: handleClicAddEvents,\n    icon: \"add\"\n  }];\n  const modelOpen = modelData.modelOpen,\n        calanderDataList = modelData.calanderDataList,\n        showAddTable = modelData.showAddTable,\n        searchFilterValue = modelData.searchFilterValue;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TableWidget, {\n    rows: tableData,\n    defaultSort: \"name\",\n    columns: columns,\n    tableTitle: title,\n    showAllEvents: showAllEvents,\n    handleToolBarAction: props.handleDeleteSelectedRows,\n    actionColumn: actionColumn,\n    handleTableSearch: props.handleTablseSearch,\n    searchPlaceholder: \"Search By Name\",\n    searchFilterValue: searchFilterValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(SideBarcomponent, {\n    modelOpen: modelOpen,\n    closeModelClick: handleClickModelClose,\n    calanderDataList: calanderDataList,\n    showAddTable: showAddTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    eventsList: state.eventsList\n  };\n};\n\nUsertable.propTypes = {\n  title: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  tableData: PropTypes.array.isRequired,\n  handleDeleteSelectedRows: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps)(Usertable);","map":{"version":3,"sources":["C:/projects/spectrum/src/component/userTable.js"],"names":["React","useState","TableWidget","SideBarcomponent","connect","PropTypes","Usertable","props","title","columns","tableData","modelOpen","calanderDataList","showAddTable","searchFilterValue","modelData","setModelData","getEventListData","user_idex","eventslist","eventsList","filter","element","registerd_user","includes","handleClickModelOpen","data","showAll","console","log","popupData","length","index","handleClickModelClose","handleClicAddEvents","showAllEvents","eventDataList","actionColumn","callBack","icon","handleDeleteSelectedRows","handleTablseSearch","mapStateToProps","state","propTypes","string","isRequired","array","func"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,QAEhBC,KAFgB,GAEaD,KAFb,CAEhBC,KAFgB;AAAA,QAETC,OAFS,GAEaF,KAFb,CAETE,OAFS;AAAA,QAEAC,SAFA,GAEaH,KAFb,CAEAG,SAFA;;AAAA,oBAIQT,QAAQ,CAAC;AACvCU,IAAAA,SAAS,EAAC,KAD6B;AAEvCC,IAAAA,gBAAgB,EAACF,SAFsB;AAGvCG,IAAAA,YAAY,EAAC,KAH0B;AAIvCC,IAAAA,iBAAiB,EAAC;AAJqB,GAAD,CAJhB;AAAA;AAAA,QAIjBC,SAJiB;AAAA,QAINC,YAJM;;AAUtB,QAAMC,gBAAgB,GAAEC,SAAD,IAAa;AAClC,QAAIC,UAAU,GAACZ,KAAK,CAACa,UAArB;AAED,WAAOD,UAAU,CAACE,MAAX,CAAmBC,OAAD,IAAW;AACjC,aAAOA,OAAO,CAACC,cAAR,CAAuBC,QAAvB,CAAgCN,SAAhC,CAAP;AACD,KAFK,CAAP;AAIA,GAPD;;AAQA,QAAMO,oBAAoB,GAAC,CAACC,IAAD,EAAOC,OAAO,GAAC,KAAf,KAAuB;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACC,QAAII,SAAS,GAAEJ,IAAI,CAACK,MAAN,GAAcL,IAAd,GAAmB,CAACA,IAAD,CAAjC;;AACD,QAAG,CAACC,OAAJ,EAAY;AACVG,MAAAA,SAAS,GAACb,gBAAgB,CAACS,IAAI,CAACM,KAAN,CAA1B;AACD,KAL+C,CAMhD;;;AACAhB,IAAAA,YAAY,CAAC;AAACL,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,gBAAgB,EAACkB;AAAjC,KAAD,CAAZ;AACD,GARD;;AASA,QAAMG,qBAAqB,GAAEP,IAAD,IAAQ;AAClCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAV,IAAAA,YAAY,mBAAKD,SAAL;AAAgBJ,MAAAA,SAAS,EAAC,KAA1B;AAAiCE,MAAAA,YAAY,EAAC;AAA9C,OAAZ;AACD,GAHD;;AAIA,QAAMqB,mBAAmB,GAAER,IAAD,IAAQ;AAChCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAII,SAAS,GAAC,CAACJ,IAAD,CAAd;AACAV,IAAAA,YAAY,CAAC;AAACL,MAAAA,SAAS,EAAC,IAAX;AAAgBC,MAAAA,gBAAgB,EAACkB,SAAjC;AAA2CjB,MAAAA,YAAY,EAAC;AAAxD,KAAD,CAAZ;AACD,GAJD,CA/BsB,CAoCtB;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AACF,QAAMsB,aAAa,GAAC,MAAI;AACtBV,IAAAA,oBAAoB,CAAClB,KAAK,CAAC6B,aAAP,EAAsB,IAAtB,CAApB,CADsB,CAEtB;AACD,GAHD;;AAIA,QAAMC,YAAY,GAAG,CACnB;AACE7B,IAAAA,KAAK,EAAE,aADT;AAEE;AACA8B,IAAAA,QAAQ,EAACb,oBAHX;AAIEc,IAAAA,IAAI,EAAC;AAJP,GADmB,EAOnB;AACE/B,IAAAA,KAAK,EAAE,YADT;AAEE;AACA8B,IAAAA,QAAQ,EAACJ,mBAHX;AAIEK,IAAAA,IAAI,EAAC;AAJP,GAPmB,CAArB;AAjDwB,QA+DjB5B,SA/DiB,GA+D6CI,SA/D7C,CA+DjBJ,SA/DiB;AAAA,QA+DNC,gBA/DM,GA+D6CG,SA/D7C,CA+DNH,gBA/DM;AAAA,QA+DYC,YA/DZ,GA+D6CE,SA/D7C,CA+DYF,YA/DZ;AAAA,QA+D0BC,iBA/D1B,GA+D6CC,SA/D7C,CA+D0BD,iBA/D1B;AAgExB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEJ,SADR;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,OAAO,EAAED,OAHX;AAIE,IAAA,UAAU,EAAED,KAJd;AAKE,IAAA,aAAa,EAAE2B,aALjB;AAME,IAAA,mBAAmB,EAAE5B,KAAK,CAACiC,wBAN7B;AAOE,IAAA,YAAY,EAAEH,YAPhB;AAQE,IAAA,iBAAiB,EAAE9B,KAAK,CAACkC,kBAR3B;AASE,IAAA,iBAAiB,EAAC,gBATpB;AAUE,IAAA,iBAAiB,EAAE3B,iBAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,oBAAC,gBAAD;AACc,IAAA,SAAS,EAAEH,SADzB;AAEc,IAAA,eAAe,EAAEsB,qBAF/B;AAGc,IAAA,gBAAgB,EAAErB,gBAHhC;AAIc,IAAA,YAAY,EAAEC,YAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAsBD;;AAED,MAAM6B,eAAe,GAAEC,KAAD,IAAS;AAC7B,SAAO;AACLvB,IAAAA,UAAU,EAACuB,KAAK,CAACvB;AADZ,GAAP;AAGD,CAJD;;AAMAd,SAAS,CAACsC,SAAV,GAAoB;AAClBpC,EAAAA,KAAK,EAACH,SAAS,CAACwC,MAAV,CAAiBC,UADL;AAElBrC,EAAAA,OAAO,EAACJ,SAAS,CAAC0C,KAAV,CAAgBD,UAFN;AAGlBpC,EAAAA,SAAS,EAACL,SAAS,CAAC0C,KAAV,CAAgBD,UAHR;AAIlBN,EAAAA,wBAAwB,EAACnC,SAAS,CAAC2C,IAAV,CAAeF;AAJtB,CAApB;AAMA,eAAe1C,OAAO,CAACsC,eAAD,CAAP,CAAyBpC,SAAzB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport TableWidget from '../widgets/TableWidget';\r\nimport SideBarcomponent from './SideBarcomponent';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Usertable(props) {\r\n\r\n  const { title, columns, tableData} = props;\r\n\r\n  const [modelData, setModelData]=useState({\r\n    modelOpen:false,\r\n    calanderDataList:tableData,\r\n    showAddTable:false,\r\n    searchFilterValue:\"\"\r\n  });  \r\n    const getEventListData=(user_idex)=>{\r\n      let eventslist=props.eventsList;\r\n      \r\n     return eventslist.filter((element)=>{\r\n        return element.registerd_user.includes(user_idex);\r\n      });\r\n\r\n    }\r\n    const handleClickModelOpen=(data, showAll=false)=>{\r\n      console.log(data);\r\n       let popupData=(data.length)?data:[data];\r\n      if(!showAll){\r\n        popupData=getEventListData(data.index);\r\n      }\r\n      //let popupData=getEventListData(data.index);      \r\n      setModelData({modelOpen:true,calanderDataList:popupData});\r\n    }\r\n    const handleClickModelClose=(data)=>{\r\n      console.log(data);\r\n      setModelData({...modelData, modelOpen:false, showAddTable:false});\r\n    }\r\n    const handleClicAddEvents=(data)=>{\r\n      console.log(data);\r\n      let popupData=[data];\r\n      setModelData({modelOpen:true,calanderDataList:popupData,showAddTable:true});\r\n    }\r\n    // handleTableSearch = (searchedData) => {\r\n      \r\n    // }\r\n    // const deleteSelectedRows=(seletedRowIds)=>{\r\n    //   let filterData=usersList.filter((value)=>{\r\n    //       return (!seletedRowIds.includes(value.user_index))\r\n    //   });\r\n\r\n    // }\r\n  const showAllEvents=()=>{\r\n    handleClickModelOpen(props.eventDataList, true);\r\n    //setModelData({...modelData, calanderDataList:tableData,modelOpen:true});\r\n  }\r\n  const actionColumn = [\r\n    {\r\n      title: \"View events\",\r\n      // handleViewAction:{handleClickModelClose}\r\n      callBack:handleClickModelOpen,\r\n      icon:\"view\"\r\n    },\r\n    {\r\n      title: \"Add Events\",\r\n      //handleAddAction:{handleClickModelClose}\r\n      callBack:handleClicAddEvents,\r\n      icon:\"add\"\r\n    }    \r\n  ];\r\n  const {modelOpen, calanderDataList, showAddTable, searchFilterValue}=modelData;\r\n  return (\r\n    <React.Fragment>\r\n      <TableWidget\r\n        rows={tableData}\r\n        defaultSort='name'\r\n        columns={columns}\r\n        tableTitle={title}\r\n        showAllEvents={showAllEvents}\r\n        handleToolBarAction={props.handleDeleteSelectedRows}\r\n        actionColumn={actionColumn}\r\n        handleTableSearch={props.handleTablseSearch} \r\n        searchPlaceholder=\"Search By Name\"\r\n        searchFilterValue={searchFilterValue} \r\n      />\r\n      <SideBarcomponent \r\n                    modelOpen={modelOpen}                    \r\n                    closeModelClick={handleClickModelClose}\r\n                    calanderDataList={calanderDataList}\r\n                    showAddTable={showAddTable}\r\n            />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    eventsList:state.eventsList    \r\n  }\r\n}\r\n\r\nUsertable.propTypes={\r\n  title:PropTypes.string.isRequired,\r\n  columns:PropTypes.array.isRequired,\r\n  tableData:PropTypes.array.isRequired,\r\n  handleDeleteSelectedRows:PropTypes.func.isRequired  \r\n}\r\nexport default connect(mapStateToProps)(Usertable)"]},"metadata":{},"sourceType":"module"}