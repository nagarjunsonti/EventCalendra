{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\container\\\\tablecontainer.js\";\nimport React, { useState } from 'react';\nimport Usertable from '../component/userTable';\nimport Eventtable from '../component/eventTable';\nimport { userColumns } from '../data/Userdata';\nimport { eventColumns } from '../data/EventData';\nimport { Container, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction Tablecontainer(props) {\n  const usersList = props.usersList,\n        eventsList = props.eventsList;\n\n  const _useState = useState({\n    usersListData: usersList,\n    eventsListDate: eventsList\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableobj = _useState2[0],\n        setTableObj = _useState2[1];\n\n  const handleTableSearch = value => {\n    let searcheddata = value;\n    let user_ids_event = [];\n    let flag = false;\n    let regex = new RegExp(searcheddata, 'gi');\n    let EventData = eventsList;\n    let filterData = EventData.filter(value => {\n      flag = value.organizer.match(regex);\n\n      if (flag) {\n        //events_ids.push(value.index);\n        user_ids_event = [...new Set([...user_ids_event, ...value.registerd_user])];\n        return true;\n      } else {\n        return false;\n      }\n    }); // setTableObj({...tableobj, calanderDataList:filterData, searchFilterValue:value});\n    //    userFilterData = state.usersList.filter((element) => {\n    //         return user_ids_event.includes(element.index);                                    \n    //     });\n    // newState = {\n    //     ...state,\n    //     eventsList: filterData,\n    //     usersList: userFilterData\n    // };\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Box, {\n    my: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Usertable, {\n    columns: userColumns,\n    title: 'User List',\n    handleDeleteSelectedRows: props.deleteUserSelectedRows,\n    handleTablseSearch: props.handleUserTableSearch,\n    tableData: tableobj.usersListData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Eventtable, {\n    columns: eventColumns,\n    title: 'Event List',\n    handleDeleteSelectedRows: props.deleteEventSelectedRows,\n    handleTablseSearch: props.handleEventTableSearch,\n    handleIsShowOnCalander: props.handleIsShowOnCalander,\n    tableData: tableobj.usersListData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    eventsList: state.eventsList,\n    usersList: state.usersList\n  };\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    deleteUserSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"delete_event_data\",\n        data: seletedRowIds\n      });\n    },\n    handleIsShowOnCalander: row_id => {\n      dispatch({\n        type: \"set_isShowOnCalander\",\n        data: row_id\n      });\n    },\n    deleteEventSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"delete_user_data\",\n        data: seletedRowIds\n      });\n    },\n    handleEventTableSearch: searcheddata => {\n      dispatch({\n        type: \"search_user_tables_data\",\n        data: searcheddata\n      });\n    },\n    handleUserTableSearch: searcheddata => {\n      dispatch({\n        type: \"search_user_tables_data\",\n        data: searcheddata\n      });\n    } //* handleTableSearch:(searcheddata)=>{\n    //     dispatch({type:\"search_events_tables_data\", data:searcheddata})\n    // }*/\n\n  };\n};\n\nTablecontainer.propTypes = {\n  eventsList: PropTypes.array.isRequired,\n  deleteEventSelectedRows: PropTypes.func.isRequired,\n  handleIsShowOnCalander: PropTypes.func.isRequired,\n  usersList: PropTypes.array.isRequired,\n  deleteUserSelectedRows: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispachToProps)(Tablecontainer);\n;","map":{"version":3,"sources":["C:/projects/spectrum/src/container/tablecontainer.js"],"names":["React","useState","Usertable","Eventtable","userColumns","eventColumns","Container","Box","connect","PropTypes","Tablecontainer","props","usersList","eventsList","usersListData","eventsListDate","tableobj","setTableObj","handleTableSearch","value","searcheddata","user_ids_event","flag","regex","RegExp","EventData","filterData","filter","organizer","match","Set","registerd_user","deleteUserSelectedRows","handleUserTableSearch","deleteEventSelectedRows","handleEventTableSearch","handleIsShowOnCalander","mapStateToProps","state","mapDispachToProps","dispatch","seletedRowIds","type","data","row_id","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Usertable from '../component/userTable'\r\nimport Eventtable from '../component/eventTable'\r\nimport { userColumns } from '../data/Userdata';\r\nimport { eventColumns } from '../data/EventData';\r\nimport {Container, Box } from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nfunction Tablecontainer(props) {\r\n    const {usersList, eventsList}=props;\r\n\r\n    const [tableobj, setTableObj]= useState({\r\n        usersListData:usersList,\r\n        eventsListDate:eventsList\r\n    })\r\n\r\n    const handleTableSearch=(value)=>{\r\n        let searcheddata=value;\r\n        let user_ids_event=[];\r\n        let flag=false;\r\n        let regex = new RegExp(searcheddata, 'gi')\r\n\r\n        let EventData=eventsList;\r\n        let filterData= EventData.filter((value) => {\r\n            flag=value.organizer.match(regex)\r\n            if(flag){\r\n                        //events_ids.push(value.index);\r\n                        user_ids_event=[...new Set([...user_ids_event, ...value.registerd_user])];\r\n                        return true;                        \r\n                    }else{\r\n                       return false;\r\n                   }\r\n\r\n               });\r\n\r\n       // setTableObj({...tableobj, calanderDataList:filterData, searchFilterValue:value});\r\n            //    userFilterData = state.usersList.filter((element) => {\r\n            //         return user_ids_event.includes(element.index);                                    \r\n            //     });\r\n\r\n            // newState = {\r\n            //     ...state,\r\n            //     eventsList: filterData,\r\n            //     usersList: userFilterData\r\n            // };\r\n            \r\n        }\r\n\r\n        return (\r\n            <Container>\r\n            <Box my={2}>\r\n            <Usertable columns={userColumns} title={'User List'}  \r\n                handleDeleteSelectedRows ={props.deleteUserSelectedRows}\r\n                handleTablseSearch={props.handleUserTableSearch}\r\n                tableData={tableobj.usersListData}\r\n             />\r\n\r\n            <Eventtable columns={eventColumns} title={'Event List'} \r\n                handleDeleteSelectedRows ={props.deleteEventSelectedRows}\r\n                handleTablseSearch={props.handleEventTableSearch}\r\n                handleIsShowOnCalander={props.handleIsShowOnCalander}\r\n                tableData={tableobj.usersListData}\r\n            />           \r\n\r\n            </Box>\r\n            </Container>\r\n\r\n\r\n\r\n            );\r\n    }\r\n    const mapStateToProps=(state)=>{\r\n      return {\r\n        eventsList:state.eventsList,\r\n        usersList: state.usersList\r\n    }\r\n}\r\nconst mapDispachToProps=(dispatch)=>{\r\n  return {\r\n    deleteUserSelectedRows:(seletedRowIds)=>{\r\n      dispatch({type:\"delete_event_data\", data:seletedRowIds})\r\n  },\r\n  handleIsShowOnCalander:(row_id)=>{\r\n      dispatch({type:\"set_isShowOnCalander\", data:row_id})\r\n  },\r\n  deleteEventSelectedRows:(seletedRowIds)=>{\r\n    dispatch({type:\"delete_user_data\", data:seletedRowIds})\r\n},\r\nhandleEventTableSearch:(searcheddata)=>{\r\n    dispatch({type:\"search_user_tables_data\", data:searcheddata})\r\n},\r\nhandleUserTableSearch:(searcheddata)=>{\r\n    dispatch({type:\"search_user_tables_data\", data:searcheddata})\r\n}\r\n\r\n    //* handleTableSearch:(searcheddata)=>{\r\n    //     dispatch({type:\"search_events_tables_data\", data:searcheddata})\r\n    // }*/\r\n\r\n}\r\n}\r\nTablecontainer.propTypes={   \r\n  eventsList:PropTypes.array.isRequired,\r\n  deleteEventSelectedRows:PropTypes.func.isRequired,\r\n  handleIsShowOnCalander:PropTypes.func.isRequired,\r\n  usersList:PropTypes.array.isRequired,\r\n  deleteUserSelectedRows:PropTypes.func.isRequired \r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispachToProps)(Tablecontainer);;"]},"metadata":{},"sourceType":"module"}