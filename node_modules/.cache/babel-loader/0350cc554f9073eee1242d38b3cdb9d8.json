{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\widgets\\\\TableWidget.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Switch from '@material-ui/core/Switch';\nimport { Link } from '@material-ui/core';\nimport moment from \"moment\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort,\n        columns = props.columns;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  const getTableHeaderCell = headCell => {\n    if (headCell.sortFlag) {\n      return React.createElement(TableSortLabel, {\n        active: orderBy === headCell.key_id,\n        direction: order,\n        onClick: createSortHandler(headCell.key_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, headCell.label, orderBy === headCell.key_id ? React.createElement(\"span\", {\n        className: classes.visuallyHidden,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, headCell.label, \" \");\n    }\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), columns.map(headCell => React.createElement(TableCell, {\n    key: headCell.key_id,\n    align: 'center',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.key_id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, getTableHeaderCell(headCell))), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Event Actions\")));\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected,\n        tableTitle = props.tableTitle,\n        checkBoxSelected = props.checkBoxSelected;\n\n  const deleteSelectedrows = () => {\n    const selectedRows = checkBoxSelected;\n    props.handleDeleteRows(selectedRows);\n    props.handleSelectAllClick();\n  };\n\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, tableTitle), numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: () => {\n      deleteSelectedrows();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(props) {\n  debugger;\n  const rows = props.rows,\n        columns = props.columns,\n        tableTitle = props.tableTitle,\n        defaultSort = props.defaultSort;\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState(defaultSort),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(5),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        rowsPerPage = _React$useState10[0],\n        setRowsPerPage = _React$useState10[1];\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.index);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleCheckBoxClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getFormatDate = date => {\n    let formateDate = moment().format(\"MM-DD-YYYY, h:mm a\");\n    return formateDate;\n  };\n\n  const getTableCell = (row, labelId) => {\n    let columnsList = columns;\n    return columnsList.map(column => {\n      let columnData = row[column.key_id];\n\n      if (column.key_id === \"scheduledfor\") {\n        columnData = getFormatDate(row[column.key_id]);\n      }\n\n      return React.createElement(TableCell, {\n        key: row[column.key_id],\n        component: \"th\",\n        align: column.numeric ? 'center' : 'left',\n        scope: \"row\",\n        padding: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, columnData);\n    });\n  }; // const handleEventDisplayToggle = (event) => {\n  // }\n\n\n  const getIconComponent = (row, action) => {\n    switch (action.icon) {\n      case 'view':\n        return React.createElement(VisibilityTwoToneIcon, {\n          onClick: () => {\n            action.callBack(row);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        });\n\n      case 'add':\n        return React.createElement(AddCircleOutlineIcon, {\n          onClick: () => {\n            action.callBack(row);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        });\n\n      case 'delete':\n        return React.createElement(DeleteIcon, {\n          onClick: () => {\n            action.callBack(row);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        });\n\n      case 'switch':\n        return React.createElement(Switch, {\n          checked: row.isShowOnCalander,\n          onChange: () => {\n            props.handleEventDisplayToggle(row.index);\n          },\n          value: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        });\n    }\n  };\n\n  const getActionTableCell = (labelId, row) => {\n    return React.createElement(TableCell, {\n      component: \"th\",\n      align: \"center\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actionLinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, props.actionColumn.map(action => {\n      return React.createElement(Tooltip, {\n        title: action.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": action.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, getIconComponent(row, action))) // <Link component=\"button\"\n      //   variant=\"body2\"\n      //   onClick={() => {action.callBack(row);}}\n      // >\n      //   <Tooltip title={action.title}>\n      //     <IconButton aria-label={action.title}>\n      //       {getIconComponent(row,action.icon)}\n      //     </IconButton>\n      //   </Tooltip>\n      // </Link>\n      ;\n    })));\n  };\n\n  const isSelected = index => selected.indexOf(index) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    tableTitle: tableTitle,\n    checkBoxSelected: selected,\n    handleDeleteRows: props.handleDeleteRows,\n    handleSelectAllClick: handleSelectAllClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: 'small',\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    columns: columns,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, stableSort(rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.index);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true // onClick={event => handleClick(event, row.name)}\n      ,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row._id,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onClick: event => handleCheckBoxClick(event, row.index),\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    })), getTableCell(row, labelId), props.actionColumn ? getActionTableCell(labelId, row) : \"\");\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 33 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:/projects/spectrum/src/widgets/TableWidget.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","VisibilityTwoToneIcon","FilterListIcon","AddCircleOutlineIcon","Switch","Link","moment","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","columns","createSortHandler","property","event","getTableHeaderCell","headCell","sortFlag","key_id","label","visuallyHidden","disablePadding","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","tableTitle","checkBoxSelected","deleteSelectedrows","selectedRows","handleDeleteRows","handleSelectAllClick","propTypes","number","isRequired","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","rows","defaultSort","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","target","checked","newSelecteds","n","handleCheckBoxClick","id","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","getFormatDate","date","formateDate","format","getTableCell","row","labelId","columnsList","column","columnData","numeric","getIconComponent","action","icon","callBack","isShowOnCalander","handleEventDisplayToggle","getActionTableCell","actionColumn","isSelected","emptyRows","Math","min","isItemSelected","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { Link } from '@material-ui/core';\r\nimport moment from \"moment\";\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, columns } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n  const getTableHeaderCell = (headCell) => {\r\n    if (headCell.sortFlag) {\r\n      return (\r\n        <TableSortLabel\r\n          active={orderBy === headCell.key_id}\r\n          direction={order}\r\n          onClick={createSortHandler(headCell.key_id)}\r\n        >\r\n          {headCell.label}\r\n          {orderBy === headCell.key_id ? (\r\n            <span className={classes.visuallyHidden}>\r\n              {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n            </span>\r\n          ) : null}\r\n        </TableSortLabel>\r\n      );\r\n    } else {\r\n      return (<div>{headCell.label} </div>)\r\n    }\r\n  }\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.key_id}\r\n            align={'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.key_id ? order : false}\r\n          >\r\n            {getTableHeaderCell(headCell)}\r\n          </TableCell>\r\n        ))}\r\n        <TableCell >\r\n          Event Actions\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, tableTitle, checkBoxSelected } = props;\r\n\r\n  const deleteSelectedrows= ()=>{\r\n    const selectedRows=checkBoxSelected;\r\n    props.handleDeleteRows(selectedRows);\r\n    props.handleSelectAllClick();\r\n\r\n  }\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            {tableTitle}\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={() => { deleteSelectedrows() }}>\r\n            <DeleteIcon  />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  debugger;\r\n  const { rows, columns, tableTitle, defaultSort } = props;\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState(defaultSort);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.index);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleCheckBoxClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }; \r\n  const getFormatDate = (date) => {\r\n    let formateDate = moment().format(\"MM-DD-YYYY, h:mm a\");\r\n    return formateDate;\r\n  }\r\n  const getTableCell = (row, labelId) => {\r\n    let columnsList = columns;\r\n    return columnsList.map((column) => {\r\n      let columnData = row[column.key_id];\r\n      if (column.key_id === \"scheduledfor\") {\r\n        columnData = getFormatDate(row[column.key_id]);\r\n      }\r\n      return <TableCell key={row[column.key_id]} component=\"th\" align={column.numeric ? 'center' : 'left'} scope=\"row\" padding=\"none\">\r\n        {columnData}\r\n      </TableCell>\r\n    })\r\n  }\r\n  // const handleEventDisplayToggle = (event) => {\r\n\r\n  // }\r\n  const getIconComponent = (row, action) => {\r\n    switch (action.icon) {\r\n      case 'view':\r\n        return <VisibilityTwoToneIcon onClick={() => { action.callBack(row) }} />\r\n      case 'add':\r\n        return <AddCircleOutlineIcon onClick={() => { action.callBack(row) }} />\r\n      case 'delete':\r\n        return <DeleteIcon onClick={() => { action.callBack(row) }} />\r\n      case 'switch':\r\n        return <Switch checked={row.isShowOnCalander} onChange={()=>{props.handleEventDisplayToggle(row.index)}} value={true} />\r\n    }\r\n\r\n  }\r\n  const getActionTableCell = (labelId, row) => {\r\n    return (\r\n      <TableCell component=\"th\" align='center' id={labelId} scope=\"row\" padding=\"none\" >\r\n        <div className={\"actionLinks\"}>\r\n          {props.actionColumn.map((action) => {\r\n            return (\r\n              <Tooltip title={action.title}>\r\n                <IconButton aria-label={action.title}>\r\n                  {getIconComponent(row, action)}\r\n                </IconButton>\r\n              </Tooltip>\r\n              // <Link component=\"button\"\r\n              //   variant=\"body2\"\r\n              //   onClick={() => {action.callBack(row);}}\r\n              // >\r\n              //   <Tooltip title={action.title}>\r\n              //     <IconButton aria-label={action.title}>\r\n              //       {getIconComponent(row,action.icon)}\r\n              //     </IconButton>\r\n              //   </Tooltip>\r\n              // </Link>\r\n            )\r\n          })}\r\n        </div>\r\n      </TableCell>\r\n    )\r\n  }\r\n  const isSelected = index => selected.indexOf(index) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} tableTitle={tableTitle} checkBoxSelected={selected} handleDeleteRows={props.handleDeleteRows} handleSelectAllClick={handleSelectAllClick}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'small'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              columns={columns}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.index);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      // onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row._id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={event => handleCheckBoxClick(event, row.index)}\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      {getTableCell(row, labelId)}\r\n                      {(props.actionColumn) ? getActionTableCell(labelId, row) : \"\"}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}