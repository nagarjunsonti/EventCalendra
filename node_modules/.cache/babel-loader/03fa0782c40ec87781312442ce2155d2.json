{"ast":null,"code":"\"use strict\";\n\nvar callable = require(\"./valid-callable\"),\n    isValue = require(\"./is-value\"),\n    forEach = require(\"./for-each\"),\n    call = Function.prototype.call,\n    defaultCb = function (value, key) {\n  return [key, value];\n};\n\nmodule.exports = function (obj\n/*, cb, thisArg, compareFn*/\n) {\n  var a = [],\n      cb = arguments[1],\n      thisArg = arguments[2];\n  cb = isValue(cb) ? callable(cb) : defaultCb;\n  forEach(obj, function (value, key, targetObj, index) {\n    a.push(call.call(cb, thisArg, value, key, this, index));\n  }, obj, arguments[3]);\n  return a;\n};","map":null,"metadata":{},"sourceType":"script"}