{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\component\\\\EventTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport TableWidget from '../widgets/TableWidget';\nimport SideBarcomponent from './SideBarcomponent';\nimport PropTypes from 'prop-types';\n\nfunction Eventtable(props) {\n  let title = props.title,\n      columns = props.columns,\n      tableData = props.tableData;\n\n  let _useState = useState({\n    modelOpen: false,\n    calanderDataList: tableData,\n    showAddTable: false,\n    searchFilterValue: \"\",\n    sideBarTitle: \"All\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      modelData = _useState2[0],\n      setModelData = _useState2[1];\n\n  useEffect(() => {\n    setModelData(_objectSpread({}, modelData, {\n      calanderDataList: tableData\n    }));\n  }, [tableData]);\n\n  const handleClickModelOpen = (data, showAll = false) => {\n    let popupData = data.length ? data : [data];\n    let sideBarTitle = showAll ? \"All\" : data.organizer;\n    setModelData({\n      modelOpen: true,\n      calanderDataList: popupData,\n      sideBarTitle: sideBarTitle\n    });\n  };\n\n  const handleClickModelClose = data => {\n    setModelData(_objectSpread({}, modelData, {\n      modelOpen: false,\n      showAddTable: false\n    }));\n  };\n\n  const showAllEvents = () => {\n    handleClickModelOpen(tableData, true);\n  };\n\n  const actionColumn = [{\n    title: \"View event\",\n    callBack: handleClickModelOpen,\n    icon: \"view\"\n  }, {\n    title: \"Hide event on calander\",\n    icon: \"switch\"\n  }];\n  const modelOpen = modelData.modelOpen,\n        calanderDataList = modelData.calanderDataList,\n        searchFilterValue = modelData.searchFilterValue,\n        sideBarTitle = modelData.sideBarTitle;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TableWidget, {\n    rows: tableData,\n    defaultSort: \"name\",\n    columns: columns,\n    tableTitle: title,\n    actionColumn: actionColumn,\n    openModelClick: handleClickModelOpen,\n    handleToolBarAction: props.handleDeleteSelectedRows,\n    handleEventDisplayToggle: props.handleIsShowOnCalander,\n    handleTableSearch: props.handleTablseSearch,\n    searchPlaceholder: \"Search By Organizer\",\n    searchFilterValue: searchFilterValue,\n    showAllEvents: showAllEvents,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(SideBarcomponent, {\n    modelOpen: modelOpen,\n    closeModelClick: handleClickModelClose,\n    sideBarTitle: sideBarTitle,\n    calanderDataList: calanderDataList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}\n\nEventtable.propTypes = {\n  title: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  tableData: PropTypes.array.isRequired,\n  handleDeleteSelectedRows: PropTypes.func.isRequired,\n  handleIsShowOnCalander: PropTypes.func.isRequired\n};\nexport default Eventtable;","map":{"version":3,"sources":["C:/projects/spectrum/src/component/EventTable.js"],"names":["React","useState","useEffect","TableWidget","SideBarcomponent","PropTypes","Eventtable","props","title","columns","tableData","modelOpen","calanderDataList","showAddTable","searchFilterValue","sideBarTitle","modelData","setModelData","handleClickModelOpen","data","showAll","popupData","length","organizer","handleClickModelClose","showAllEvents","actionColumn","callBack","icon","handleDeleteSelectedRows","handleIsShowOnCalander","handleTablseSearch","propTypes","string","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TableWidget from '../widgets/TableWidget';\r\nimport SideBarcomponent from './SideBarcomponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Eventtable(props) {\r\n  let { title, columns, tableData } = props;\r\n\r\n  let [modelData, setModelData] = useState({\r\n    modelOpen: false,\r\n    calanderDataList: tableData,\r\n    showAddTable: false,\r\n    searchFilterValue: \"\",\r\n    sideBarTitle: \"All\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    setModelData({\r\n      ...modelData,\r\n      calanderDataList: tableData\r\n    })\r\n\r\n  }, [tableData])\r\n  const handleClickModelOpen = (data, showAll = false) => {\r\n    let popupData = (data.length) ? data : [data];\r\n    let sideBarTitle = (showAll) ? \"All\" : data.organizer;\r\n    setModelData({ modelOpen: true, calanderDataList: popupData, sideBarTitle: sideBarTitle });\r\n\r\n  }\r\n  const handleClickModelClose = (data) => {\r\n    setModelData({ ...modelData, modelOpen: false, showAddTable: false });\r\n  }\r\n  const showAllEvents = () => {\r\n    handleClickModelOpen(tableData, true);\r\n  }\r\n  const actionColumn = [\r\n    {\r\n      title: \"View event\",\r\n      callBack: handleClickModelOpen,\r\n      icon: \"view\"\r\n    },\r\n    {\r\n      title: \"Hide event on calander\",\r\n      icon: \"switch\"\r\n    }\r\n  ];\r\n  const { modelOpen, calanderDataList, searchFilterValue, sideBarTitle } = modelData;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableWidget\r\n        rows={tableData}\r\n        defaultSort='name'\r\n        columns={columns}\r\n        tableTitle={title}\r\n        actionColumn={actionColumn}\r\n        openModelClick={handleClickModelOpen}\r\n        handleToolBarAction={props.handleDeleteSelectedRows}\r\n        handleEventDisplayToggle={props.handleIsShowOnCalander}\r\n        handleTableSearch={props.handleTablseSearch}\r\n        searchPlaceholder=\"Search By Organizer\"\r\n        searchFilterValue={searchFilterValue}\r\n        showAllEvents={showAllEvents}\r\n      />\r\n      <SideBarcomponent\r\n        modelOpen={modelOpen}\r\n        closeModelClick={handleClickModelClose}\r\n        sideBarTitle={sideBarTitle}\r\n        calanderDataList={calanderDataList}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\nEventtable.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  tableData: PropTypes.array.isRequired,\r\n  handleDeleteSelectedRows: PropTypes.func.isRequired,\r\n  handleIsShowOnCalander: PropTypes.func.isRequired\r\n}\r\nexport default Eventtable;"]},"metadata":{},"sourceType":"module"}