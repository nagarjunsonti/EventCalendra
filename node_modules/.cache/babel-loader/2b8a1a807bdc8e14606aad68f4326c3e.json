{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\container\\\\tablecontainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Usertable from '../component/userTable';\nimport Eventtable from '../component/eventTable';\nimport { userColumns } from '../data/Userdata';\nimport { eventColumns } from '../data/EventData';\nimport { Container, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction Tablecontainer(props) {\n  const usersList = props.usersList,\n        eventsList = props.eventsList;\n\n  const _useState = useState({\n    usersListData: usersList,\n    eventsListDate: eventsList,\n    searchFilterValue: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableobj = _useState2[0],\n        setTableObj = _useState2[1];\n\n  useEffect(() => {\n    setTableObj(_objectSpread({}, tableobj, {\n      usersListData: usersList,\n      eventsListDate: eventsList\n    }));\n  }, [usersList, eventsList]);\n\n  const handleTableSearch = (value, tableTitle) => {\n    let searcheddata = value;\n    let user_ids_event = [];\n    let user_ids_user = [];\n    let filterData = [];\n    let flag = false;\n    let userFilterData = [];\n    let regex = new RegExp(searcheddata, 'gi');\n\n    if (tableTitle === \"User List\") {\n      userFilterData = usersList.filter(value => {\n        flag = value.name.match(regex);\n\n        if (flag) {\n          user_ids_user.push(value.index);\n          return true;\n        } else {\n          return false;\n        }\n      });\n      filterData = eventsList;\n\n      if (userFilterData) {\n        filterData = filterData.filter(value => {\n          const ids_length = value.registerd_user.length;\n          flag = false;\n\n          for (let i = 0; i < ids_length; i++) {\n            flag = user_ids_user.includes(value.registerd_user[i]);\n            if (flag) break;\n          }\n\n          return flag;\n        });\n      } //setTableObj({...tableobj, usersListData:userFilterData,eventsListDate:filterData, searchFilterValue:value});\n\n    } else {\n      filterData = filterData.filter(value => {\n        flag = value.organizer.match(regex);\n\n        if (flag) {\n          user_ids_event = [...new Set([...user_ids_event, ...value.registerd_user])];\n          return true;\n        } else {\n          return false;\n        }\n      });\n\n      if (filterData) {\n        userFilterData = usersList.filter(element => {\n          return user_ids_event.includes(element.index);\n        });\n      }\n    }\n\n    setTableObj(_objectSpread({}, tableobj, {\n      usersListData: userFilterData,\n      eventsListDate: filterData,\n      searchFilterValue: value\n    }));\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Box, {\n    my: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Usertable, {\n    columns: userColumns,\n    title: 'User List',\n    handleDeleteSelectedRows: props.deleteUserSelectedRows,\n    handleTablseSearch: handleTableSearch,\n    tableData: tableobj.usersListData,\n    eventDataList: tableobj.eventsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Eventtable, {\n    columns: eventColumns,\n    title: 'Event List',\n    handleDeleteSelectedRows: props.deleteEventSelectedRows,\n    handleTablseSearch: handleTableSearch,\n    handleIsShowOnCalander: props.handleIsShowOnCalander,\n    tableData: tableobj.eventsListDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    eventsList: state.eventsList,\n    usersList: state.usersList\n  };\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    deleteUserSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"delete_user_data\",\n        data: seletedRowIds\n      });\n    },\n    handleIsShowOnCalander: row_id => {\n      dispatch({\n        type: \"set_isShowOnCalander\",\n        data: row_id\n      });\n    },\n    deleteEventSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"delete_event_data\",\n        data: seletedRowIds\n      });\n    },\n    handleEventTableSearch: searcheddata => {\n      dispatch({\n        type: \"search_user_tables_data\",\n        data: searcheddata\n      });\n    },\n    handleUserTableSearch: searcheddata => {\n      dispatch({\n        type: \"search_user_tables_data\",\n        data: searcheddata\n      });\n    } //* handleTableSearch:(searcheddata)=>{\n    //     dispatch({type:\"search_events_tables_data\", data:searcheddata})\n    // }*/\n\n  };\n};\n\nTablecontainer.propTypes = {\n  eventsList: PropTypes.array.isRequired,\n  deleteEventSelectedRows: PropTypes.func.isRequired,\n  handleIsShowOnCalander: PropTypes.func.isRequired,\n  usersList: PropTypes.array.isRequired,\n  deleteUserSelectedRows: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispachToProps)(Tablecontainer);\n;","map":{"version":3,"sources":["C:/projects/spectrum/src/container/tablecontainer.js"],"names":["React","useState","useEffect","Usertable","Eventtable","userColumns","eventColumns","Container","Box","connect","PropTypes","Tablecontainer","props","usersList","eventsList","usersListData","eventsListDate","searchFilterValue","tableobj","setTableObj","handleTableSearch","value","tableTitle","searcheddata","user_ids_event","user_ids_user","filterData","flag","userFilterData","regex","RegExp","filter","name","match","push","index","ids_length","registerd_user","length","i","includes","organizer","Set","element","deleteUserSelectedRows","deleteEventSelectedRows","handleIsShowOnCalander","mapStateToProps","state","mapDispachToProps","dispatch","seletedRowIds","type","data","row_id","handleEventTableSearch","handleUserTableSearch","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Usertable from '../component/userTable'\r\nimport Eventtable from '../component/eventTable'\r\nimport { userColumns } from '../data/Userdata';\r\nimport { eventColumns } from '../data/EventData';\r\nimport {Container, Box } from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nfunction Tablecontainer(props) {\r\n\tconst {usersList, eventsList}=props;\r\n\r\n\tconst [tableobj, setTableObj]= useState({\r\n\t\tusersListData:usersList,\r\n\t\teventsListDate:eventsList,\r\n\t\tsearchFilterValue:''\r\n\t})\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetTableObj({\r\n\t\t\t...tableobj,\r\n\t\t\tusersListData:usersList,\r\n\t\t\teventsListDate:eventsList,\r\n\t\t})\r\n\r\n\t},[usersList, eventsList])\r\n\r\n\tconst handleTableSearch=(value, tableTitle)=>{\r\n\t\tlet searcheddata=value;\r\n\t\tlet user_ids_event=[];\r\n\t\tlet user_ids_user=[];\r\n\t\tlet filterData=[];\r\n\t\tlet flag=false;\r\n\t\tlet userFilterData=[];\r\n\t\tlet regex = new RegExp(searcheddata, 'gi');\r\n\r\n\r\n\t\tif(tableTitle === \"User List\"){\t\t\t\r\n\r\n\t\t\t userFilterData = usersList.filter((value) => {\r\n\t\t\t\tflag=value.name.match(regex)\r\n\t\t\t\tif(flag){\r\n\t\t\t\t\tuser_ids_user.push(value.index);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}                        \r\n\t\t\t});\r\n\t\t\tfilterData = eventsList;\r\n\r\n\t\t\tif(userFilterData){\r\n\t\t\t\t\tfilterData = filterData.filter((value) => {\r\n\t\t\t\t\t\t\tconst ids_length=value.registerd_user.length;\r\n\t\t\t\t\t\t\tflag=false;\r\n\t\t\t\t\t\t\tfor(let i=0; i<ids_length; i++){\r\n\t\t\t\t\t\t\t\t\tflag=user_ids_user.includes(value.registerd_user[i]);\r\n\t\t\t\t\t\t\t\t\tif(flag)break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn flag;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\t//setTableObj({...tableobj, usersListData:userFilterData,eventsListDate:filterData, searchFilterValue:value});\r\n\t\t}else{\t\t\t\t\t\r\n\t\t\t\t\tfilterData= filterData.filter((value) => {\r\n\t\t\t\t\t\t\tflag=value.organizer.match(regex)\r\n\t\t\t\t\t\t\tif(flag){\r\n\t\t\t\t\t\t\t\t\t\tuser_ids_event=[...new Set([...user_ids_event, ...value.registerd_user])];\r\n\t\t\t\t\t\t\t\t\t\treturn true;                        \r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(filterData){\r\n\t\t\t\t\t\tuserFilterData = usersList.filter((element) => {\r\n\t\t\t\t\t\t\treturn user_ids_event.includes(element.index);                                    \r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t}\r\n\t\t\tsetTableObj({...tableobj, usersListData:userFilterData,eventsListDate:filterData, searchFilterValue:value});\r\n\t                        \r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t<Box my={2}>\r\n\t\t<Usertable columns={userColumns} title={'User List'}  \r\n\t\thandleDeleteSelectedRows ={props.deleteUserSelectedRows}\r\n\t\thandleTablseSearch={handleTableSearch}\r\n\t\ttableData={tableobj.usersListData}\r\n\t\teventDataList={tableobj.eventsList}\r\n\t\t/>\r\n\r\n\t\t<Eventtable columns={eventColumns} title={'Event List'} \r\n\t\thandleDeleteSelectedRows ={props.deleteEventSelectedRows}\r\n\t\thandleTablseSearch={handleTableSearch}\r\n\t\thandleIsShowOnCalander={props.handleIsShowOnCalander}\r\n\t\ttableData={tableobj.eventsListDate}\r\n\t\t/>           \r\n\r\n\t\t</Box>\r\n\t\t</Container>\r\n\r\n\r\n\r\n\t\t);\r\n}\r\nconst mapStateToProps=(state)=>{\r\n\treturn {\r\n\t\teventsList:state.eventsList,\r\n\t\tusersList: state.usersList\r\n\t}\r\n}\r\nconst mapDispachToProps=(dispatch)=>{\r\n\treturn {\r\n\t\tdeleteUserSelectedRows:(seletedRowIds)=>{\r\n\t\t\tdispatch({type:\"delete_user_data\", data:seletedRowIds})\r\n\t\t},\r\n\t\thandleIsShowOnCalander:(row_id)=>{\r\n\t\t\tdispatch({type:\"set_isShowOnCalander\", data:row_id})\r\n\t\t},\r\n\t\tdeleteEventSelectedRows:(seletedRowIds)=>{\r\n\t\t\tdispatch({type:\"delete_event_data\", data:seletedRowIds})\r\n\t\t},\r\n\t\thandleEventTableSearch:(searcheddata)=>{\r\n\t\t\tdispatch({type:\"search_user_tables_data\", data:searcheddata})\r\n\t\t},\r\n\t\thandleUserTableSearch:(searcheddata)=>{\r\n\t\t\tdispatch({type:\"search_user_tables_data\", data:searcheddata})\r\n\t\t}\r\n\r\n    //* handleTableSearch:(searcheddata)=>{\r\n    //     dispatch({type:\"search_events_tables_data\", data:searcheddata})\r\n    // }*/\r\n\r\n   }\r\n  }\r\n  Tablecontainer.propTypes={   \r\n  \teventsList:PropTypes.array.isRequired,\r\n  \tdeleteEventSelectedRows:PropTypes.func.isRequired,\r\n  \thandleIsShowOnCalander:PropTypes.func.isRequired,\r\n  \tusersList:PropTypes.array.isRequired,\r\n  \tdeleteUserSelectedRows:PropTypes.func.isRequired \r\n  }\r\n\r\n  export default  connect(mapStateToProps, mapDispachToProps)(Tablecontainer);;"]},"metadata":{},"sourceType":"module"}