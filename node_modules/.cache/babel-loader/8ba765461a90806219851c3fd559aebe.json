{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\spectrum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\spectrum\\\\src\\\\container\\\\Tablecontainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Usertable from '../component/UserTable';\nimport Eventtable from '../component/EventTable';\nimport { userColumns } from '../data/Userdata';\nimport { eventColumns } from '../data/EventData';\nimport { Container, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction Tablecontainer(props) {\n  const usersList = props.usersList,\n        eventsList = props.eventsList;\n\n  const _useState = useState({\n    usersListData: usersList,\n    eventsListDate: eventsList,\n    searchFilterValue: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableobj = _useState2[0],\n        setTableObj = _useState2[1];\n\n  useEffect(() => {\n    setTableObj(_objectSpread({}, tableobj, {\n      usersListData: usersList,\n      eventsListDate: eventsList\n    }));\n  }, [usersList, eventsList]);\n\n  const handleTableSearch = (value, tableTitle) => {\n    let searcheddata = value;\n    let user_ids_event = [];\n    let user_ids_user = [];\n    let filterData = [];\n    let flag = false;\n    let userFilterData = [];\n    let regex = new RegExp(searcheddata, 'gi');\n\n    if (tableTitle === \"User List\") {\n      userFilterData = usersList.filter(value => {\n        flag = value.name.match(regex);\n\n        if (flag) {\n          user_ids_user.push(value.index);\n          return true;\n        } else {\n          return false;\n        }\n      });\n      filterData = eventsList;\n\n      if (userFilterData) {\n        filterData = filterData.filter(value => {\n          const ids_length = value.registerd_user.length;\n          flag = false;\n\n          for (let i = 0; i < ids_length; i++) {\n            flag = user_ids_user.includes(value.registerd_user[i]);\n            if (flag) break;\n          }\n\n          return flag;\n        });\n      }\n    } else {\n      filterData = eventsList.filter(value => {\n        flag = value.organizer.match(regex);\n\n        if (flag) {\n          user_ids_event = [...new Set([...user_ids_event, ...value.registerd_user])];\n          return true;\n        } else {\n          return false;\n        }\n      });\n\n      if (filterData) {\n        userFilterData = usersList.filter(element => {\n          return user_ids_event.includes(element.index);\n        });\n      }\n    }\n\n    setTableObj(_objectSpread({}, tableobj, {\n      usersListData: userFilterData,\n      eventsListDate: filterData,\n      searchFilterValue: value\n    }));\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Box, {\n    my: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Usertable, {\n    columns: userColumns,\n    title: 'User List',\n    handleDeleteSelectedRows: props.deleteUserSelectedRows,\n    handleTablseSearch: handleTableSearch,\n    tableData: tableobj.usersListData,\n    eventDataList: tableobj.eventsListDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Eventtable, {\n    columns: eventColumns,\n    title: 'Event List',\n    handleDeleteSelectedRows: props.deleteEventSelectedRows,\n    handleTablseSearch: handleTableSearch,\n    handleIsShowOnCalander: props.handleIsShowOnCalander,\n    tableData: tableobj.eventsListDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    eventsList: state.eventsList,\n    usersList: state.usersList\n  };\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    deleteUserSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"delete_user_data\",\n        data: seletedRowIds\n      });\n    },\n    handleIsShowOnCalander: row_id => {\n      dispatch({\n        type: \"set_isShowOnCalander\",\n        data: row_id\n      });\n    },\n    deleteEventSelectedRows: seletedRowIds => {\n      dispatch({\n        type: \"delete_event_data\",\n        data: seletedRowIds\n      });\n    },\n    handleEventTableSearch: searcheddata => {\n      dispatch({\n        type: \"search_user_tables_data\",\n        data: searcheddata\n      });\n    },\n    handleUserTableSearch: searcheddata => {\n      dispatch({\n        type: \"search_user_tables_data\",\n        data: searcheddata\n      });\n    }\n  };\n};\n\nTablecontainer.propTypes = {\n  eventsList: PropTypes.array.isRequired,\n  deleteEventSelectedRows: PropTypes.func.isRequired,\n  handleIsShowOnCalander: PropTypes.func.isRequired,\n  usersList: PropTypes.array.isRequired,\n  deleteUserSelectedRows: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispachToProps)(Tablecontainer);\n;","map":{"version":3,"sources":["C:/projects/spectrum/src/container/Tablecontainer.js"],"names":["React","useState","useEffect","Usertable","Eventtable","userColumns","eventColumns","Container","Box","connect","PropTypes","Tablecontainer","props","usersList","eventsList","usersListData","eventsListDate","searchFilterValue","tableobj","setTableObj","handleTableSearch","value","tableTitle","searcheddata","user_ids_event","user_ids_user","filterData","flag","userFilterData","regex","RegExp","filter","name","match","push","index","ids_length","registerd_user","length","i","includes","organizer","Set","element","deleteUserSelectedRows","deleteEventSelectedRows","handleIsShowOnCalander","mapStateToProps","state","mapDispachToProps","dispatch","seletedRowIds","type","data","row_id","handleEventTableSearch","handleUserTableSearch","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Usertable from '../component/UserTable'\r\nimport Eventtable from '../component/EventTable'\r\nimport { userColumns } from '../data/Userdata';\r\nimport { eventColumns } from '../data/EventData';\r\nimport { Container, Box } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nfunction Tablecontainer(props) {\r\n\tconst { usersList, eventsList } = props;\r\n\tconst [tableobj, setTableObj] = useState({\r\n\t\tusersListData: usersList,\r\n\t\teventsListDate: eventsList,\r\n\t\tsearchFilterValue: ''\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tsetTableObj({\r\n\t\t\t...tableobj,\r\n\t\t\tusersListData: usersList,\r\n\t\t\teventsListDate: eventsList,\r\n\t\t})\r\n\r\n\t}, [usersList, eventsList]);\r\n\tconst handleTableSearch = (value, tableTitle) => {\r\n\t\tlet searcheddata = value;\r\n\t\tlet user_ids_event = [];\r\n\t\tlet user_ids_user = [];\r\n\t\tlet filterData = [];\r\n\t\tlet flag = false;\r\n\t\tlet userFilterData = [];\r\n\t\tlet regex = new RegExp(searcheddata, 'gi');\r\n\t\tif (tableTitle === \"User List\") {\r\n\t\t\tuserFilterData = usersList.filter((value) => {\r\n\t\t\t\tflag = value.name.match(regex)\r\n\t\t\t\tif (flag) {\r\n\t\t\t\t\tuser_ids_user.push(value.index);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tfilterData = eventsList;\r\n\r\n\t\t\tif (userFilterData) {\r\n\t\t\t\tfilterData = filterData.filter((value) => {\r\n\t\t\t\t\tconst ids_length = value.registerd_user.length;\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t\tfor (let i = 0; i < ids_length; i++) {\r\n\t\t\t\t\t\tflag = user_ids_user.includes(value.registerd_user[i]);\r\n\t\t\t\t\t\tif (flag) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn flag;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfilterData = eventsList.filter((value) => {\r\n\t\t\t\tflag = value.organizer.match(regex)\r\n\t\t\t\tif (flag) {\r\n\t\t\t\t\tuser_ids_event = [...new Set([...user_ids_event, ...value.registerd_user])];\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (filterData) {\r\n\t\t\t\tuserFilterData = usersList.filter((element) => {\r\n\t\t\t\t\treturn user_ids_event.includes(element.index);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetTableObj({ ...tableobj, usersListData: userFilterData, eventsListDate: filterData, searchFilterValue: value });\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Box my={2}>\r\n\t\t\t\t<Usertable columns={userColumns} title={'User List'}\r\n\t\t\t\t\thandleDeleteSelectedRows={props.deleteUserSelectedRows}\r\n\t\t\t\t\thandleTablseSearch={handleTableSearch}\r\n\t\t\t\t\ttableData={tableobj.usersListData}\r\n\t\t\t\t\teventDataList={tableobj.eventsListDate}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Eventtable columns={eventColumns} title={'Event List'}\r\n\t\t\t\t\thandleDeleteSelectedRows={props.deleteEventSelectedRows}\r\n\t\t\t\t\thandleTablseSearch={handleTableSearch}\r\n\t\t\t\t\thandleIsShowOnCalander={props.handleIsShowOnCalander}\r\n\t\t\t\t\ttableData={tableobj.eventsListDate}\r\n\t\t\t\t/>\r\n\r\n\t\t\t</Box>\r\n\t\t</Container>\r\n\t);\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\teventsList: state.eventsList,\r\n\t\tusersList: state.usersList\r\n\t}\r\n}\r\nconst mapDispachToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteUserSelectedRows: (seletedRowIds) => {\r\n\t\t\tdispatch({ type: \"delete_user_data\", data: seletedRowIds })\r\n\t\t},\r\n\t\thandleIsShowOnCalander: (row_id) => {\r\n\t\t\tdispatch({ type: \"set_isShowOnCalander\", data: row_id })\r\n\t\t},\r\n\t\tdeleteEventSelectedRows: (seletedRowIds) => {\r\n\t\t\tdispatch({ type: \"delete_event_data\", data: seletedRowIds })\r\n\t\t},\r\n\t\thandleEventTableSearch: (searcheddata) => {\r\n\t\t\tdispatch({ type: \"search_user_tables_data\", data: searcheddata })\r\n\t\t},\r\n\t\thandleUserTableSearch: (searcheddata) => {\r\n\t\t\tdispatch({ type: \"search_user_tables_data\", data: searcheddata })\r\n\t\t}\r\n\t}\r\n}\r\nTablecontainer.propTypes = {\r\n\teventsList: PropTypes.array.isRequired,\r\n\tdeleteEventSelectedRows: PropTypes.func.isRequired,\r\n\thandleIsShowOnCalander: PropTypes.func.isRequired,\r\n\tusersList: PropTypes.array.isRequired,\r\n\tdeleteUserSelectedRows: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Tablecontainer);;"]},"metadata":{},"sourceType":"module"}